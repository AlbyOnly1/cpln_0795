---
title: "Rotterdam Internal Data Review - Verson 1.1"
author: "Michael Fichman, Xiaxin Tang for PennPraxis & VibeLab"
date: 17 June, 2024
output:
  html_document:
    toc: yes
    toc_float: yes
    code_folding: hide
    code_download: no
  pdf_document:
    toc: yes
---

# Summary

## About this document and our methodology

This markdown document contains internal analysis of Creative Footprint Project Rotterdam data. PennPraxis combined CFP survey data with spatial and economic data from local and national sources to understand the relationships between the urban environment and its populations, and CFP venues and their characteristics. Rotterdam's venue and urban data can now be compared to that of other CFP cities.

Any of the graphics or tables in this document can be rendered as vector files (pdf, eps) for use in a final report. They can be styled in Adobe Illustrator or other similar software in the graphic production process. The maps in this document are not heavily styled, as it is expected that the vectors will be manipulated into production quality once relevant graphics are selected for publication.

This document has an appendix outlining methodology and source documentation.

## Top-Line Analytical Findings

**Top takeaways:**

1. Rotterdam's creative spaces are more heavily concentrated in the city center than in any other CFP city.

2. Rotterdam has the smallest sample of venues of any CFP city.

3. Rotterdam's urban form, spatial economics, and the characteristics of the venues in the city follow similar patterns to other transit-oriented CFP cities and differ from automobile-centric CFP cities like Sydney or Montreal.

4. Experts gave Rotterdam's venues relatively low ratings for programming quality relative to similar panels in peer CFP cities. Experts rated the program of venues in the city center as being relatively poorer than in outlying districts, on average.

5. More experimental or community focused programming is taking place in areas where real estate is more affordable, but venues are less accessible. Recent planning documents by local authorities emphasizes the need to preserve affordability and cultural space in such areas. Programming ratings are negatively related to transit density, pedestrian frequency, personal income, and rents - e.g. the higher the average ratings, the less density, income, etc., of an area (Section 6.4.5).

6. Despite the large central cluster of venues, venues in outlying areas are diffuse - with high average distances between them. This means that nightlife venues may be more difficult to access via transportation, and the negative externalities associated with nightlife (eg. sound, crowds) might be harder to manage because there cannot be corridor-level implementations of policies or programs. Issues related to cycling, lighting, safety etc., from focus groups relate to this concept.

7. Rotterdam's venue mix is somewhat unbalanced - it has relatively few spaces in other key categories, specifically the sub-500 m^2 category.

8. Real estate costs and average personal income rates are increasing dramatically in areas that contain most of Rotterdam's venues. There are rising concerns with affordability in areas such as Delfshaven and Feijnord, where programming is considered relatively creative and community focused. Focusing on the preservation of affordability and support of creative spaces in these areas would align the CFP with plans and policies put forward by local authorities.

*SAMPLE CHARACTERISTICS*

1. The CFP sample for Rotterdam consists of **71 cultural venues**. This is the smallest sample in the CFP study. Four of these venues fall slightly outside the governing boundaries of Rotterdam, with addresses in Schiedam.

2. The scope of the geographic and economic analysis includes the 19 Gebieden that intersect the study area. Five of these areas have no notable residential areas (largely industrial and port zones). Gebieden resemble geographic units from other CFP cities in that they are of similar size. Their boundaries and names relate to local governance and the local sense of place. **Only 8 of Rotterdam's Gebieden have venues in the CFP sample**.

3. Four venues were actually located in the adjacent municipality of Schiedam, which is not analyzed in this study.

*VENUE CHARACTERISTICS*

1. **Rotterdam venues scored lower averages on most program quality indicators relative to other CFP cities (Section 2.2). ** This is perhaps a result not from very low scores, but from a relatively low number of venues that were given the strongest endorsement of their programming characteristics.

2. Rotterdam's venue sample is has a mix of venues of various sizes, but **lacks venues under 100 m^2 - a critical part of a "healthy" venue ladder.** (Section 1.2.1). The larger the venue, the less accessible it is to new, experimental or community-focused acts (Section 2). The sample is dominated by venues between 100 and 500 square meters (over 60%).

3. Half of the city's venues are older than 10 years, and half younger. A good number have started in the last 3 years. (Section 1.2.4).

4. **Rotterdam has a very high proportion of venues that have multiple programming uses. On average, a venue in Rotterdam is programmed for more types of uses (e.g. film, music, talks, DJs etc.,) than in any other CFP city. The average number of use categories is ~2.4 aned roughly 76% of all venues are used for more than one type of programming.**.  Multi-use spaces had, on average, slightly higher programming scores than multi-use spaces. Spaces of all size categories showed this tendency towards multiple uses.

5. **A machine-learning classification approach revealed three distinctive venue programming typologies in the City** - one which is made up of larger venues with above average program, one made up of medium venues with above average programming, and the largest group - medium venues with below average programming (located almost entirely in the center). The **higher programming venue types are located throughout, but they dominate the non-Centrum areas.** (Section 8)

*VENUES AND THE CITY*

1. **Venues in Rotterdam concentrate in the city center more so than in any other CFP city.** There are some venues in outlying Gebieden, but they do not cluster in major districts. (Sections 6, 7, 8, 9) **Venue density in the Centrum is comparable to some of the highest density venue clusters in the CFP database** - with as many venues per square km as New York's Bushwick or Berlin's Freidrichshain-Kreuzberg - but the size of the cluster is relatively smaller in terms of number of venues. (Section 6.5)

2. **Rotterdam as a whole has a relatively low venue density compared to other CFP cities**, and a notably low density for a European CFP city. **Venues are, on average, further away from one another** than in other CFP cities - the local clusters of venues are less dense. (Section 6.5). This fact probably relates to the fact that venues outside the Centrum are not clustered in corridors.

3. **Venues and urban variables show the same co-location correlations as other CFP cities.**  (Section 6.3). Venue density corresponds to transit density and centrality. Higher investments in programming tend to take place in areas where rents are relatively lower (and access is somewhat poorer).  **Rotterdam's compact urban form and mass transit-centered transportation system makes it more similar to other European and Asian CFP cities and less so North American and Australian CFP cities.** In this report we took a more comprehensive look at these relationships to look at correlations - there is a nice table of the strength of these correlations based on what we did in Montreal (Section 6.4.5).

4. Average housing values are increasing very dramatically, and this fact, combined with inflationary pressure - puts spaces in the Centrum and adjacent neighborhoods at risk. (Section 6.1)

5. **What are the focus areas? Feijnoord and Delfshaven have a lot of the city's best rated programming. These Gebieden contain waterfront where nightlife activity is commonly found in other cities**. Both districts are identified in plans (2025-28 Cultural Policy Principles and the Rotterdam Coalition Agreement 2022-26) as being at risk of gentrification and in need of support for affordable spaces and artists. (Section 9)

6. **We have a breakdown of four selected districts in Section 9.**


```{r setup, message = FALSE, warning = FALSE}
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
# ---- Load Packages ----
#list of packages


library(tidyverse)
library(data.table)
library(sf)
library(viridis)
library(viridisLite)
#library(translateR)
library(kableExtra)
library(leaflet)
library(leaflet.extras)
library(lubridate)
library(mapview)
library(spdep)
library(FNN)

# ---- Load MUSA 5080 functions -----

# Import MUSA 5080 functions
source("https://raw.githubusercontent.com/urbanSpatial/Public-Policy-Analytics-Landing/master/functions.r")

# ---- Load Graphic Palettes ----

# Load a ggplot theme and a color palette

plotTheme <- theme(
  plot.title =element_text(size=12),
  plot.subtitle = element_text(size=8),
  plot.caption = element_text(size = 6),
  axis.text.x = element_text(size = 10, angle = 45, hjust = 1),
  axis.text.y = element_text(size = 10),
  axis.title.y = element_text(size = 10),
  # Set the entire chart region to blank
  panel.background=element_blank(),
  plot.background=element_blank(),
  #panel.border=element_rect(colour="#F0F0F0"),
  # Format the grid
  panel.grid.major=element_line(colour="#D0D0D0",size=.75),
  axis.ticks=element_blank())

mapTheme <- theme(plot.title =element_text(size=12),
                  plot.subtitle = element_text(size=8),
                  plot.caption = element_text(size = 6),
                  axis.line=element_blank(),
                  axis.text.x=element_blank(),
                  axis.text.y=element_blank(),
                  axis.ticks=element_blank(),
                  axis.title.x=element_blank(),
                  axis.title.y=element_blank(),
                  panel.background=element_blank(),
                  panel.border=element_blank(),
                  panel.grid.major=element_line(colour = 'transparent'),
                  panel.grid.minor=element_blank(),
                  legend.direction = "vertical", 
                  legend.position = "right",
                  plot.margin = margin(1, 1, 1, 1, 'cm'),
                  legend.key.height = unit(1, "cm"), legend.key.width = unit(0.2, "cm"))

palette <- c("#10142A", "#47E9B9", "#F55D60", "#71EA48", "#C148EA", "#EAC148")
viridisPalette <- c("#440154", "#73D055", "#F55D60", "#238A8D", "#FDE725")
CityPalette <- c("#A230C2", "#3AEAB8", "#F9C700", "#0069FC", "#EF3340", "#bdbdbd", "#bcbddc") # Berlin, NYC, Tokyo, Stockholm, Montreal, Sydney

```

```{r load_data, message=FALSE, warning=FALSE, results = 'hide'}

# Read in d1_aggregates from elsewhere
d1_aggregates <- st_read("~/GitHub/CFP/unified__city_data/district_aggregates/d1_aggregates_11_16_22.geojson") %>%
  st_as_sf(crs = 4326)

# Load in target city d2_aggregates

d2_aggregates <- st_read("~/GitHub/CFP/city_data_engineer/rotterdam_data_aggregation/output/Rotterdam_d2_aggregates.geojson") %>%
  st_as_sf(crs = 4326)

# Load the d2_aggregates from elsewhere

d2_aggregates_all <- st_read("~/GitHub/CFP/unified__city_data/district_aggregates/d2_aggregates_06_15_23.geojson") %>%
  st_as_sf(crs = 4326) %>%
  rename(d2_name = d2_name.x)


# Read in venues
main_venue_data <- read.csv("~/GitHub/CFP/city_data_engineer/data_venues/output/main_venue_data_2024.csv") %>%
  mutate(city = ifelse(city == "Solna", "Stockholm", city))

# Read in EPSG information

source("~/GitHub/CFP/unified__city_data/epsg_list.R")


```

```{r japanese_english, message = FALSE, warning = FALSE}
# Load a list of special wards, do a quick join to assign english names to the d1

# Perhaps this should get put in the district_aggregation code

# list of the GEOID for the 23 central wards of Tokyo that are included in the analysis.
special_wards <- c("13101",
                   "13102",
                   "13103",
                   "13104",
                   "13105",
                   "13106",
                   "13107",
                   "13108",
                   "13109",
                   "13110",
                   "13111",
                   "13112",
                   "13113",
                   "13114",
                   "13115",
                   "13116",
                   "13117",
                   "13118",
                   "13119",
                   "13120",
                   "13121",
                   "13122",
                   "13123")


d1_aggregates <- left_join(d1_aggregates %>%
                    mutate(d1_name_en = ifelse(city_en != "Tokyo", as.character(d1_name), NA),
                           d1_id = as.character(d1_id)), 
                           as.data.frame(cbind(c("Chiyoda", 
                                    "Chuo",
                                    "Minato",
                                    "Shinjuku",
                                    "Bunkyo",
                                    "Taito",
                                    "Sumida",
                                    "Koto",
                                    "Shinagawa",
                                    "Meguro",
                                    "Ota",
                                    "Setagaya",
                                    "Shibuya",
                                    "Nakano",
                                    "Suginami",
                                    "Toshima",
                                    "Kita",
                                    "Arakawa",
                                    "Itabashi",
                                    "Nerima",
                                    "Adachi",
                                    "Katsu-Shika",
                                    "Edo Gawa"),
                                  special_wards)),
                  by = c("d1_id" = "special_wards")) %>%
                    mutate(d1_name_en = if_else(is.na(d1_name_en) == TRUE, as.character(V1), 
                                                d1_name_en))%>%
                    select(-V1)

```

```{r remove_towns, message = FALSE, warning = FALSE}
# Remove former arrondissements from d1 aggregates that are now towns since 2006 reorganization
# EXCEPT Mont Royal
remove_arrondissements <- c("Baie-d'Urfé",
                           "Beaconsfield",
                           "Senneville",
                           "Kirkland",
                           "Montréal-Est",
                           "Sainte-Anne-de-Bellevue",
                           "Dorval",
                           "Pointe-Claire")

```

# 1 Venues

## 1.1 Interactive Map

This interactive map shows all CFP venues - this is for internal use only.

Hover over any venue with your cursor to see some information about the data point.

Sources: CFP

```{r leaflet, message= FALSE, warning=FALSE}

l <- leaflet() %>% 
  addProviderTiles(providers$Esri.WorldTopoMap) %>%
  setView(lng = mean(main_venue_data$x, na.rm = TRUE),
          lat = mean(main_venue_data$y, na.rm = TRUE),
          zoom = 2) %>%
  addScaleBar(position = "topleft") %>%
  addCircleMarkers(data= main_venue_data %>%
                     mutate(name = iconv(name, to = "UTF-8")),
                   lng=~x, 
                   lat=~y,
                   radius =~ 1, 
                   fillOpacity =~ 1,
                   color =~ "blue",
                   label=~paste(name, " | ", street, " | uid: ", uid, "| Year: ", year ))

l

# Note the conversion above using iconv to get the Japanese characters to UTF-8

```

## 1.2 Venue Characteristics

### 1.2.1 Venue Size Chart

Rotterdam's venue size distribution shows a high number of mid-sized venues but a lack of small (sub 100 square meter) venues. Such spaces are important for the development of local artists and also provide more intimate settings for touring performers to interact with the audience. 61% of venues are between 100 and 500 square meters.

Sources: CFP

```{r venue_size_distribution}
ggplot(data = main_venue_data %>%
         filter(size != 0,
                is.na(city) == FALSE,
                city == "Rotterdam") %>%
         mutate(size = ifelse(size == 5, 4, size)) %>%
         mutate(size = case_when(size == 1 ~ "1. < 100",
                                 size == 2 ~ "2. 101-500",
                                 size == 3 ~ "3. 501-1000",
                                 size == 4 ~ "4. 1001+")) %>%
         group_by(size) %>%
         tally())+
  geom_bar(aes(y = n, x = size), stat = 'identity', 
           fill = CityPalette[7], alpha = 0.6)+
  #scale_fill_viridis_d()+
  labs(
    title = "Venue Size Distribution - Rotterdam (Square Meters)",
    subtitle = "",
    x="",
    y="Total Venues",
    #fill = "CFP City",
    caption = "Data: CFP")+
  plotTheme
```


### 1.2.2 Venue Size Table

```{r venue_size_table}
main_venue_data %>%
         filter(size != 0,
                is.na(city) == FALSE,
                city == "Rotterdam") %>%
         mutate(size = ifelse(size == 5, 4, size)) %>%
         mutate(size = case_when(size == 1 ~ "1. < 100 m2",
                                 size == 2 ~ "2. 101-500 m2",
                                 size == 3 ~ "3. 501-1000 m2",
                                 size == 4 ~ "4. 1001+ m2")) %>%
         group_by(size) %>%
         tally() %>%
  mutate(pct = round(100*(n/sum(n)), digits = 2)) %>%
  kable() %>%
  kable_styling() %>%
    scroll_box(width = "650px", height = "400px")

```


### 1.2.3 Venue Size - Multi-City Comparison

Sources: CFP

```{r venue_size_table_multi_city}
main_venue_data %>%
         filter(size != 0,
                is.na(city) == FALSE) %>%
         mutate(size = as.numeric(size),
                size = ifelse(size == 5, 4, size)) %>%
         mutate(size = case_when(size == 1 ~ "1. < 100",
                                 size == 2 ~ "2. 101-500",
                                 size == 3 ~ "3. 501-1000",
                                 size == 4 ~ "4. 1001+"),
                city  = case_when(city == "Berlin" ~ "1. BERLIN, 2017",
                                  city == "New York" ~ "2. NEW YORK CITY, 2018",
                                  city == "Tokyo" ~ "3. TOKYO, 2019",
                                  city == "Stockholm" ~ "4. STOCKHOLM, 2021",
                                  city == "Montreal" ~ "5. MONTREAL, 2022",
                                  city == "Sydney" ~ "6. SYDNEY, 2023",
                                  city == "Rotterdam" ~ "7. ROTTERDAM, 2024")) %>%
         group_by(size, city) %>%
         tally() %>%
         ungroup() %>%
         group_by(city) %>%
         mutate(pct = 100*n/sum(n)) %>%
  ggplot()+
  geom_bar(aes(x = size, y = pct, fill = city), 
           stat = "identity", position = "dodge",
           alpha = 0.6) +
  scale_fill_manual(values = c(CityPalette[1], CityPalette[2], CityPalette[3], 
                               CityPalette[4], CityPalette[5], CityPalette[6],
                               CityPalette[7]))+
  facet_wrap(~city)+
  theme(legend.direction = "horizontal", legend.position = "bottom")+
  labs(
    title = "Venue Size - CFP Cities",
    subtitle = "",
    x="Size (Square Meters)",
    y="Percentage of Venues",
    fill = "CFP City",
    caption = "Data: CFP")+
  plotTheme

#ggsave("rotterdam_images/multi_citysize.pdf", width = 8, height = 11, units = "in")

```

## 1.2.3.2 Venue size Dynamic Map

```{r}
mapView(main_venue_data %>% 
          filter(city == "Rotterdam",
                 is.na(x) == FALSE, is.na(y) == FALSE) %>% 
          mutate(size = case_when(size == 1 ~ "1. < 100 m2",
                                 size == 2 ~ "2. 101-500 m2",
                                 size == 3 ~ "3. 501-1000 m2",
                                 size == 4 ~ "4. 1001+ m2")) %>%
          st_as_sf(coords = c("x", "y"), crs = 4326), zcol = "size" )

```

## 1.2.4.2 Venue Size and Use Type

```{r venue_age_type}
 main_venue_data %>%
         filter(size != 0,
                is.na(city) == FALSE,
                city == "Rotterdam") %>%
         mutate(size = ifelse(size == 5, 4, size)) %>%
         mutate(size = case_when(size == 1 ~ "1. < 100 m2",
                                 size == 2 ~ "2. 101-500 m2",
                                 size == 3 ~ "3. 501-1000 m2",
                                 size == 4 ~ "4. 1001+ m2")) %>%
                  select(size, venueType_disco, venueType_club, 
                         venueType_concertHall, venueType_musicBar, 
                         venueType_restaurant, venueType_gallery)%>%
  gather(-size, key = "variable", value = "value") %>%
  filter(value != 0, is.na(value) == FALSE) %>%
  group_by(size, variable) %>%
  tally() %>%
ggplot()+ 
  geom_bar(aes(y = n, x = size), stat = "identity", 
           alpha = 0.6, fill = CityPalette[7]) + 
  facet_wrap(~variable, scales = "free")+ 
  labs(
    title = "Venue Size by Use",
    subtitle = "",
    caption = "Data: CFP")+
  ylab("Number of Venues")+
  xlab("Size (Square Meters)")+
  plotTheme
```

### 1.2.4 Venue Age Chart

There is a fairly healthy balance of venue age - almost 50% of venues are under 10 years, 50% over.

Sources: CFP

```{r venue_age_distribution}
ggplot(data = main_venue_data %>%
         filter(is.na(years_operating) == FALSE,
                years_operating != "",
                is.na(city) == FALSE,
                city == "Rotterdam") %>%
         mutate(years_operating = as.numeric(years_operating)) %>%
         mutate(years_operating = case_when(years_operating == 1 ~ "1. 0-3",
                                            years_operating == 2 ~ "2. 4-10",
                                            years_operating == 3 ~ "3. 11-20",
                                            years_operating == 4 ~ "4. 20+")) %>%
         filter(is.na(years_operating) == FALSE) %>%
         group_by(years_operating) %>%
         tally()%>%
         mutate(pct = round(100*(n/sum(n)), digits = 2))%>%
         ungroup())+
  geom_bar(aes(y = n, x = years_operating), stat = 'identity', 
           fill = CityPalette[7], alpha = 0.6)+
  #scale_fill_viridis_d()+
  labs(
    title = "Venue Age (Years)",
    subtitle = "Data only available for x of y venues in sample",
    x="",
    y="Total Venues",
    #fill = "CFP City",
    caption = "Data: CFP")+
  coord_flip()+
  plotTheme
```

### 1.2.5 Venue Age Table

```{r venue_age_table}
main_venue_data %>%
         filter(is.na(years_operating) == FALSE,
                years_operating != "",
                is.na(city) == FALSE,
                city == "Rotterdam") %>%
  mutate(years_operating = as.numeric(years_operating)) %>%
         mutate(years_operating = case_when(years_operating == 1 ~ "1. 0-3",
                                            years_operating == 2 ~ "2. 4-10",
                                            years_operating == 3 ~ "3. 11-20",
                                            years_operating == 4 ~ "4. 20+")) %>%
         group_by(years_operating) %>%
         tally()%>%
         mutate(pct = round(100*(n/sum(n)), digits = 2))%>%
         ungroup() %>%
  kable() %>%
  kable_styling() %>%
    scroll_box(width = "650px", height = "400px")

```

Sources: CFP

```{r venue_age_table_multi_city}
main_venue_data %>%
         filter(is.na(years_operating) == FALSE,
                years_operating != "",
                is.na(city) == FALSE) %>%
         #mutate(years_operating = as.numeric(years_operating)) %>%
         mutate(years_operating = case_when(years_operating %in% c("0", "0-3", "0-Jan", "1",
                                                                   "1.0") ~ "1. 0-3",
                                            years_operating %in% c("3-10",  "2", "4-10",
                                                                   "2.0") ~ "2. 4-10",
                                            years_operating %in% c("3", "10-20", "11-20",
                                                                   "3.0") ~ "3. 11-20",
                                            years_operating %in% c("4", "20+", "4\n2",
                                                                   "4.0") ~ "4. 20+")) %>%
         mutate(years_operating = ifelse(city == "Tokyo" & year(ymd(year_opened)) < 1997,"4. 20+", years_operating)) %>%
         filter(is.na(years_operating) == FALSE) %>%
         mutate(city  = case_when(city == "Berlin" ~ "1. BERLIN, 2017",
                                  city == "New York" ~ "2. NEW YORK CITY, 2018",
                                  city == "Tokyo" ~ "3. TOKYO, 2019",
                                  city == "Stockholm" ~ "4. STOCKHOLM, 2021",
                                  city == "Montreal" ~ "5. MONTREAL, 2022",
                                  city == "Sydney" ~ "6. SYDNEY, 2023",
                                  city == "Rotterdam" ~ "7. ROTTERDAM, 2024")) %>%
         group_by(years_operating, city) %>%
         tally()%>%
         ungroup %>%
         group_by(city) %>%
         mutate(pct = round(100*(n/sum(n)), digits = 2))%>%
         ungroup() %>%
  ggplot()+
  geom_bar(aes(x = years_operating, y = pct, fill = city), 
           stat = "identity", position = "dodge",
           alpha = 0.6) +
  scale_fill_manual(values = c(CityPalette[1], CityPalette[2], CityPalette[3], 
                               CityPalette[4], CityPalette[5], CityPalette[6],
                               CityPalette[7]))+
  facet_wrap(~city)+
  theme(legend.direction = "horizontal", legend.position = "bottom")+
  labs(
    title = "Venue Age - CFP Cities",
    subtitle = "",
    x="Years operating",
    y="Percentage of Venues",
    fill = "CFP City",
    caption = "Data: CFP")+
  plotTheme

```

### 1.2.6 Venue Age Map

```{r}
mapView(main_venue_data %>% 
          filter(city == "Rotterdam",
                 is.na(x) == FALSE, is.na(y) == FALSE) %>% 
          mutate(years_operating = case_when(years_operating %in% c("0", "0-3", "0-Jan", "1",
                                                                   "1.0") ~ "1. 0-3",
                                            years_operating %in% c("3-10",  "2", "4-10",
                                                                   "2.0") ~ "2. 4-10",
                                            years_operating %in% c("3", "10-20", "11-20",
                                                                   "3.0") ~ "3. 11-20",
                                            years_operating %in% c("4", "20+", "4\n2",
                                                                   "4.0") ~ "4. 20+")) %>%
          st_as_sf(coords = c("x", "y"), crs = 4326), zcol = "years_operating" )

```


# 2 Programming Variables


Sources: CFP

## 2.1 Programming Variables Overiview

Rotterdam's venues programming characteristics were not highly rated relative to other CFP cities. On average, the likelihood of experimental, local, arts-focused, and creativity-driven programming was below CFP averages, and was comparable to that measured in Stockholm.

Some observations:

- Very few venues were rated "very likely" to promote artistic content rather than other elements of programming like food or drink.

- There were notably few venues that were assessed very highly in all major categories.

- Programming characteristics are generally similar between venue types, including venues that also have restaurant programming. There was some slightly higher assessment for clubs.


```{r variable_distributions}
main_venue_data %>% 
                   filter(city == "Rotterdam") %>%
                  select(experimentation, creative_output, 
                         community_focus, promotion)%>%
  gather(key = "variable", value = "value") %>%
  filter(value != 0) %>%
  mutate(variable = case_when(variable == "community_focus" ~ "Community Focus",
                              variable == "experimentation" ~ "Experimentation",
                              variable == "creative_output" ~ "Creative Output",
                              variable == "promotion" ~ "Promotion")) %>%
ggplot()+ 
  geom_histogram(aes(value), position = "dodge", binwidth = 1, alpha = 0.6, fill = CityPalette[7]) + 
  facet_wrap(~variable)+ 
  labs(
    title = "Distribution of Programming Variables",
    subtitle = "",
    caption = "Data: CFP")+
  ylab("Number of venues")+
  xlab("Rating (1-4)")+
  plotTheme
```
```{r variable_distributions_2}
main_venue_data %>% 
                   filter(city == "Rotterdam") %>%
                  mutate(cumulative_score = experimentation + creative_output +
                         community_focus+ promotion)%>%
ggplot()+ 
  geom_histogram(aes(cumulative_score), position = "dodge", binwidth = 1, alpha = 0.6, fill = CityPalette[7]) + 
  labs(
    title = "Cumulative Programming Variables by Venue",
    subtitle = "Four categories scored 1-4",
    caption = "Data: CFP")+
  ylab("Number of venues")+
  xlab("Cumulative rating")+
  plotTheme
```

```{r variable_distributions_facet}
main_venue_data %>% 
                  mutate(cumulative_score = experimentation + creative_output +
                         community_focus+ promotion)%>%
ggplot()+ 
  geom_histogram(aes(cumulative_score), position = "dodge", binwidth = 1, alpha = 0.6, fill = CityPalette[7]) + 
  labs(
    title = "Cumulative Programming Variables by Venue",
    subtitle = "Four categories scored 1-4",
    caption = "Data: CFP")+
  ylab("Number of venues")+
  xlab("Cumulative rating")+
  facet_wrap(~city, scales = "free")+
  plotTheme
```

Note - NYC and Berlin cumulative ratings are from 1-9 because Community Focus was not asked yet.

```{r variable_distributions_3}
main_venue_data %>% 
   mutate(community_focus = ifelse(is.na(community_focus) == TRUE, 0, community_focus),
          cumulative_score = experimentation + creative_output + community_focus + promotion,
          mean_score = ifelse(city %in% c("Berlin", "New York"), 
                              cumulative_score / 3, cumulative_score / 4 ))%>%
  select(city, cumulative_score, mean_score) %>%
gather(-city, value = "value", key = "variable") %>%
  group_by(city, variable) %>%
  summarize(mean_score = mean(value, na.rm = TRUE),
            score_sd = sd(value, na.rm = TRUE)) %>%
  ggplot()+
  geom_bar(aes(x = city, y = mean_score), stat = "identity")+
  facet_wrap(~variable, scales = "free")+
  plotTheme
  
```

```{r programming_multi_city_facet, warning = FALSE, message = FALSE}
main_venue_data %>% 
    select(city, experimentation, creative_output, 
           community_focus, promotion)%>%
    gather(-city, key = "variable", value = "value") %>%
    filter(value != 0) %>%
    mutate(variable = case_when(variable == "community_focus" ~ "Community Focus",
                                variable == "experimentation" ~ "Experimentation",
                                variable == "creative_output" ~ "Creative Output",
                                variable == "promotion" ~ "Promotion")) %>%
    ggplot()+ 
    geom_histogram(aes(value), position = "dodge", binwidth = 1, alpha = 0.6, fill = CityPalette[6]) + 
    facet_grid(city~variable, scales = "free")+ 
    labs(
        title = "Distribution of Programming Variables",
        subtitle = "",
        caption = "Data: CFP")+
    ylab("Number of venues")+
    xlab("Rating (1-4)")+
    plotTheme

```

### 2.1.1. Programming ratings by venue use type

```{r variable_distributions_club}
main_venue_data %>% 
                   filter(city == "Rotterdam") %>%
  mutate(club = ifelse(venueType_club == 1, "Club", "Not Club")) %>%
                  select(experimentation, creative_output, 
                         community_focus, promotion, club)%>%
  gather(-club, key = "variable", value = "value") %>%
  filter(value != 0) %>%
  mutate(variable = case_when(variable == "community_focus" ~ "Community Focus",
                              variable == "experimentation" ~ "Experimentation",
                              variable == "creative_output" ~ "Creative Output",
                              variable == "promotion" ~ "Promotion")) %>%
ggplot()+ 
  geom_histogram(aes(value), position = "dodge", binwidth = 1, alpha = 0.6, fill = CityPalette[7]) + 
  facet_grid(club~variable)+ 
  labs(
    title = "Distribution of Programming Variables",
    subtitle = "",
    caption = "Data: CFP")+
  ylab("Number of venues")+
  xlab("Rating (1-4)")+
  plotTheme
```


```{r variable_distributions_disco}
main_venue_data %>% 
                   filter(city == "Rotterdam") %>%
  mutate(disco = ifelse(venueType_disco == 1, "Disco", "Not Disco")) %>%
                  select(experimentation, creative_output, 
                         community_focus, promotion, disco)%>%
  gather(-disco, key = "variable", value = "value") %>%
  filter(value != 0) %>%
  mutate(variable = case_when(variable == "community_focus" ~ "Community Focus",
                              variable == "experimentation" ~ "Experimentation",
                              variable == "creative_output" ~ "Creative Output",
                              variable == "promotion" ~ "Promotion")) %>%
ggplot()+ 
  geom_histogram(aes(value), position = "dodge", binwidth = 1, alpha = 0.6, fill = CityPalette[6]) + 
  facet_grid(disco~variable)+ 
  labs(
    title = "Distribution of Programming Variables",
    subtitle = "",
    caption = "Data: CFP")+
  ylab("Number of venues")+
  xlab("Rating (1-4)")+
  plotTheme
```

```{r variable_distributions_restaurant}
main_venue_data %>% 
                   filter(city == "Rotterdam") %>%
  mutate(disco = ifelse(venueType_restaurant == 1, "Restaurant", "Not Restaurant")) %>%
                  select(experimentation, creative_output, 
                         community_focus, promotion, disco)%>%
  gather(-disco, key = "variable", value = "value") %>%
  filter(value != 0) %>%
  mutate(variable = case_when(variable == "community_focus" ~ "Community Focus",
                              variable == "experimentation" ~ "Experimentation",
                              variable == "creative_output" ~ "Creative Output",
                              variable == "promotion" ~ "Promotion")) %>%
ggplot()+ 
  geom_histogram(aes(value), position = "dodge", binwidth = 1, alpha = 0.6, fill = CityPalette[6]) + 
  facet_grid(disco~variable)+ 
  labs(
    title = "Distribution of Programming Variables",
    subtitle = "",
    caption = "Data: CFP")+
  ylab("Number of venues")+
  xlab("Rating (1-4)")+
  plotTheme
```
### 2.1.2 Cumulative Program Rating Map

```{r}
main_venue_data %>% 
          filter(city == "Rotterdam",
                 is.na(x) == FALSE, is.na(y) == FALSE) %>% 
                  mutate(cumulative_score = experimentation + creative_output +
                         community_focus+ promotion) %>%
          st_as_sf(coords = c("x", "y"), crs = 4326) %>%
          mapView(., zcol = "cumulative_score" )+
  mapview(d2_aggregates)

```


## 2.2 Programming Summaries by City

Rotterdam was ranked poorly relative to other cities on average programming scores - having the lowest or second lowest ranking in every category of the 7 cities.

```{r programming_city_summaries}
main_venue_data %>% 
                  select(city, experimentation, creative_output, 
                         community_focus, promotion)%>%
  gather(-city, key = "variable", value = "value") %>%
  filter(value != 0) %>%
  mutate(variable = case_when(variable == "community_focus" ~ "Community Focus",
                              variable == "experimentation" ~ "Experimentation",
                              variable == "creative_output" ~ "Creative Output",
                              variable == "promotion" ~ "Promotion")) %>%
  group_by(variable, city) %>%
  summarize(mean = round(mean(value), digits = 1)) %>%
  spread(city, mean) %>%
  kable() %>%
  kable_styling()

```

```{r programming_city_summaries_plot}
main_venue_data %>% 
                  select(city, experimentation, creative_output, 
                         community_focus, promotion)%>%
  gather(-city, key = "variable", value = "value") %>%
  filter(value != 0) %>%
  mutate(variable = case_when(variable == "community_focus" ~ "Community Focus",
                              variable == "experimentation" ~ "Experimentation",
                              variable == "creative_output" ~ "Creative Output",
                              variable == "promotion" ~ "Promotion"),
         city  = case_when(city == "Berlin" ~ "1. BERLIN, 2017",
                                  city == "New York" ~ "2. NEW YORK CITY, 2018",
                                  city == "Tokyo" ~ "3. TOKYO, 2019",
                                  city == "Stockholm" ~ "4. STOCKHOLM, 2021",
                                  city == "Montreal" ~ "5. MONTREAL, 2022",
                           city == "Sydney" ~ "6. SYDNEY, 2023",
                           city == "Rotterdam" ~ "7. ROTTERDAM, 2024")) %>%
  group_by(variable, city) %>%
  summarize(mean = round(mean(value), digits = 1)) %>%
  ungroup() %>%
  ggplot()+
  geom_bar(aes(y = mean, x = city, fill = city), stat = "identity", alpha = 0.6)+
  scale_fill_manual(values = CityPalette) + 
  facet_wrap(~variable)+
  coord_flip()+
  plotTheme

```

## 2.3 Experimental Program Measurements

**Q: Compared to other venues in the city: Is this venue a platform for new and experimental trends, sounds and art forms? Is it a place for niche genres and experimental performers as well as extraordinary event concepts?**

On average, Rotterdam's venues were rated as being "somewhat" likely to be a platform for experimentation. 


```{r experimentation_histogram}
ggplot(data = main_venue_data %>%
         filter(is.na(experimentation) == FALSE,
                city == "Rotterdam"))+
  geom_bar(aes(experimentation), fill = CityPalette[7], alpha = 0.6, size = 3)+
  #scale_fill_viridis_d()+
  labs(
    title = "Likelihood of experimental program",
    subtitle = "1 = Not at all likely -> 4 = Very likely",
    x="Experimentation Score (low to high)",
    y="Total Venues",
    #fill = "CFP City",
    caption = "Data: CFP")+
  plotTheme
```



### 2.3.1 Cross-tabs - Experimentation by size chart

The overall pattern holds amongst venue size categories.

```{r experimentation_by_size}
ggplot(data = main_venue_data %>% 
         filter(city == 'Rotterdam',
                is.na(size) == FALSE,
                size != "",
                experimentation > 0) %>%
         mutate(experimentation = case_when(experimentation == 1 ~ "1. Not At All",
                                            experimentation == 2 ~ "2. Not too",
                                            experimentation == 3 ~ "3. Somewhat",
                                            experimentation == 4 ~ "4. Very"),
                size = case_when(size == 1 ~ "1. < 100 m^2",
                                        size == 2 ~ "2. 101-500 m^2",
                                        size == 3 ~ "3. 501-1000 m^2",
                                        size %in% c(4, 5) ~ "4. 1001 m^2+")) %>%
         group_by(size, experimentation) %>%
         tally()%>%
         ungroup() %>%
         group_by(size) %>%
  mutate(pct = round(100*(n/sum(n)), digits = 2)))+
        geom_bar(aes(y = n, x = size, fill = experimentation), 
                 stat = 'identity', position = "dodge",
                 alpha = 0.6)+ 
  scale_fill_viridis_d(guide = guide_legend())+
  theme(legend.direction = "horizontal", legend.position = "bottom")+
  labs(
    title = "EXPERIMENTAL CONTENT SCORES BY VENUE SIZE - Rotterdam, 2024",
    subtitle = "Venues of all sizes rate low for experimental programming",
    x="",
    y="Number of venues in size category",
    fill = "LIKELIHOOD OF EXPERIMENTAL CONTENT",
    caption = "Data: CFP"
  )+
  plotTheme

#ggsave("sydney_images/experimentation_size.png")
```


### 2.3.2 Cross-tabs - Experimentation by size table

We see basically the same shake-out here as we see in other cities.

```{r size_experimentation_table}
main_venue_data %>% 
         filter(city == 'Rotterdam',
                is.na(size) == FALSE,
                experimentation > 0) %>%
         mutate(size = case_when(size == 1 ~ "1. < 100 m^2",
                                        size == 2 ~ "2. 101-500 m^2",
                                        size == 3 ~ "3. 501-1000 m^2",
                                        size %in% c(4, 5) ~ "4. 1001 m^2+")) %>%
         group_by(size) %>%
         summarize(count=n(),
           mean_experimentation = round(mean(experimentation, na.rm = TRUE),
                                                digits = 2))%>%
         ungroup() %>%
  kable() %>%
  kable_styling()
```


What is the global trend across the data set?

ALL CITIES

```{r experimentation_and_size_mutli_city}
main_venue_data %>% 
         filter(is.na(size) == FALSE,
                size != "",
                experimentation > 0) %>%
         mutate(
                size = case_when(size == 1 ~ "1. < 100 m^2",
                                        size == 2 ~ "2. 101-500 m^2",
                                        size == 3 ~ "3. 501-1000 m^2",
                                        size %in% c(4, 5) ~ "4. 1001 m^2+")) %>%
         group_by(size) %>%
  summarize(mean_experimentation = round(mean(experimentation, na.rm = TRUE), digits = 2)) %>%
  kable() %>%
  kable_styling()

```

### 2.2.3 Cross-tabs - Experimentation by age table

```{r age_experimentation_table}
main_venue_data %>% 
         filter(city == 'Rotterdam',
                is.na(size) == FALSE,
                experimentation > 0) %>%
         mutate(years_operating = as.numeric(years_operating)) %>%
         mutate(years_operating = case_when(years_operating == 1 ~ "1. 0-3",
                                            years_operating == 2 ~ "2. 4-10",
                                            years_operating == 3 ~ "3. 11-20",
                                            years_operating == 4 ~ "4. 20+")) %>%
         filter(is.na(years_operating) == FALSE) %>%
         group_by(years_operating) %>%
         summarize(count=n(),
           mean_experimentation = round(mean(experimentation, na.rm = TRUE),
                                                digits = 2))%>%
         ungroup() %>%
  kable() %>%
  kable_styling()
```

## 2.4. Creative Output

**Q: Do artists in this venue perform live sets and/or original works? If DJing, is it performed to a level of artistic merit?**

### 2.4.1 Cross-tabs - Creative Output by size chart

Interestingly, much higher creative content scores further down in the venue ladder, size-wise.

```{r creative_by_size}
ggplot(data = main_venue_data %>% 
         filter(city == 'Rotterdam',
                is.na(size) == FALSE,
                size != "",
                creative_output > 0) %>%
         mutate(creative_output = case_when(creative_output == 1 ~ "1. Not At All",
                                            creative_output == 2 ~ "2. Not too",
                                            creative_output == 3 ~ "3. Somewhat",
                                            creative_output == 4 ~ "4. Very"),
                size = case_when(size == 1 ~ "1. < 100 m^2",
                                        size == 2 ~ "2. 101-500 m^2",
                                        size == 3 ~ "3. 501-1000 m^2",
                                        size %in% c(4, 5) ~ "4. 1001 m^2+")) %>%
         group_by(size, creative_output) %>%
         tally()%>%
         ungroup() %>%
         group_by(size) %>%
  mutate(pct = round(100*(n/sum(n)), digits = 2)))+
        geom_bar(aes(y = n, x = size, fill = creative_output), 
                 stat = 'identity', position = "dodge",
                 alpha = 0.6)+
  scale_fill_viridis_d(guide = guide_legend())+
  theme(legend.direction = "horizontal", legend.position = "bottom")+
  labs(
    title = "Creative Output by Venue Size - Rotterdam",
    subtitle = "Subtitle",
    x="",
    y="Number of venues in size category",
    fill = "Likelihood of Original Creative Content",
    caption = "Data: CFP"
  )+
  plotTheme

#ggsave("sydney_images/creativeOutput.png")

```


### 2.4.3 Cross-tabs - Creative Output by age table

```{r age_creative_table}
main_venue_data %>% 
         filter(city == 'Rotterdam',
                is.na(size) == FALSE,
                creative_output > 0) %>%
         mutate(years_operating = as.numeric(years_operating)) %>%
         mutate(years_operating = case_when(years_operating == 1 ~ "1. 0-3",
                                            years_operating == 2 ~ "2. 4-10",
                                            years_operating == 3 ~ "3. 11-20",
                                            years_operating == 4 ~ "4. 20+")) %>%
         filter(is.na(years_operating) == FALSE) %>%
         group_by(years_operating) %>%
         summarize(count=n(),
           mean_creative_output = round(mean(creative_output, na.rm = TRUE),
                                                digits = 2))%>%
         ungroup() %>%
  kable() %>%
  kable_styling()
```


### 2.4.2 Cross-tabs - Creative Output by size table

```{r size_creative_table}
main_venue_data %>% 
         filter(city == 'Rotterdam',
                is.na(size) == FALSE,
                creative_output > 0) %>%
         mutate(size = case_when(size == 1 ~ "1. < 100 m^2",
                                        size == 2 ~ "2. 101-500 m^2",
                                        size == 3 ~ "3. 501-1000 m^2",
                                        size %in% c(4, 5) ~ "4. 1001 m^2+")) %>%
         group_by(size) %>%
         summarize(count=n(),
           mean_creative_output = round(mean(creative_output, na.rm = TRUE),
                                                digits = 2))%>%
         ungroup() %>%
  kable() %>%
  kable_styling()
```


## 2.5. Community Focused Program Measurements


**Q: Is the venue a consistent and regular platform for a niche genre and a stage for its emerging acts? Is it a hub for certain marginalised and/or underrepresented groups, scenes, milieus or is it a hotspot for the immediate neighbourhood to mingle? Is it known as an inclusive space for LGBTQIA+ artists/performers and audiences? Do venues platform other specific communities? Do they strive to create an inclusive environment?**



```{r community_histogram}
ggplot(data = main_venue_data %>%
         filter(is.na(community_focus) == FALSE,
                city == "Rotterdam"))+
  geom_bar(aes(community_focus), fill = CityPalette[7], alpha = 0.6, size = 3)+
  #scale_fill_viridis_d()+
  labs(
    title = "Likelihood of community focused program",
    subtitle = "1 = Not at all likely -> 4 = Very likely",
    x="Community Focus Score (low to high)",
    y="Total Venues",
    #fill = "CFP City",
    caption = "Data: CFP")+
  plotTheme
```



### 2.5.1 Cross-tabs - Community Focus by size chart

The largest venues are least likely to be community focused. No surprises there.


```{r community_by_size}
ggplot(data = main_venue_data %>% 
         filter(city == 'Rotterdam',
                is.na(size) == FALSE,
                size != "",
                community_focus > 0) %>%
         mutate(community_focus = case_when(community_focus == 1 ~ "1. Not At All",
                                            community_focus == 2 ~ "2. Not too",
                                            community_focus == 3 ~ "3. Somewhat",
                                            community_focus == 4 ~ "4. Very"),
                size = case_when(size == 1 ~ "1. < 100 m^2",
                                        size == 2 ~ "2. 101-500 m^2",
                                        size == 3 ~ "3. 501-1000 m^2",
                                        size %in% c(4, 5) ~ "4. 1001 m^2+")) %>%
         group_by(size, community_focus) %>%
         tally()%>%
         ungroup() %>%
         group_by(size) %>%
  mutate(pct = round(100*(n/sum(n)), digits = 2)))+
        geom_bar(aes(y = n, x = size, fill = community_focus), 
                 stat = 'identity', position = "dodge",
                 alpha = 0.6)+
  scale_fill_viridis_d(guide = guide_legend())+
  theme(legend.direction = "horizontal", legend.position = "bottom")+
  labs(
    title = "Community Focus by Venue Size - Rotterdam, 2024",
    subtitle = "",
    x="",
    y="Percentage of venues in size category",
    fill = "Likelihood of Community Focused Program",
    caption = "Data: CFP"
  )+
  plotTheme
```


### 2.5.2 Cross-tabs - Community Focus by size table

```{r size_community_table}
main_venue_data %>% 
         filter(city == 'Rotterdam',
                is.na(size) == FALSE,
                community_focus > 0) %>%
         mutate(size = case_when(size == 1 ~ "1. < 100 m^2",
                                        size == 2 ~ "2. 101-500 m^2",
                                        size == 3 ~ "3. 501-1000 m^2",
                                        size %in% c(4, 5) ~ "4. 1001 m^2+")) %>%
         group_by(size) %>%
         summarize(count=n(),
           mean_community_focus = round(mean(community_focus, na.rm = TRUE),
                                                digits = 2))%>%
         ungroup() %>%
  kable() %>%
  kable_styling()
```



### 2.5.3 Cross-tabs - Community Focus by age table

The younger venues are more likely to be community focused.

```{r age_community_table}
main_venue_data %>% 
         filter(city == 'Rotterdam',
                is.na(size) == FALSE,
                community_focus > 0) %>%
         mutate(years_operating = as.numeric(years_operating)) %>%
         mutate(years_operating = case_when(years_operating == 1 ~ "1. 0-3",
                                            years_operating == 2 ~ "2. 4-10",
                                            years_operating == 3 ~ "3. 11-20",
                                            years_operating == 4 ~ "4. 20+")) %>%
         filter(is.na(years_operating) == FALSE) %>%
         group_by(years_operating) %>%
         summarize(count=n(),
           mean_community_focus = round(mean(community_focus, na.rm = TRUE),
                                                digits = 2))%>%
         ungroup() %>%
  kable() %>%
  kable_styling()
```


## 2.6. Promotion Program Measurements

**Q: Is the promotion/marketing of this space focused on artistic content (artists, lineups, performances)? Are musicians the main reason why people attend these venues, and not e.g. culinary offers?**

Very few Rotterdam venues were assessed as "very likely" to focus on promotion of artistic content.

On average, the ratings aren't really low, just very, very few extremely high assessments.


```{r promotion_histogram}
ggplot(data = main_venue_data %>%
         filter(is.na(promotion) == FALSE,
                city == "Rotterdam"))+
  geom_bar(aes(promotion), fill = CityPalette[7], alpha = 0.6, size = 3)+
  #scale_fill_viridis_d()+
  labs(
    title = "Likelihood of promotion focused on artistic content",
    subtitle = "1 = Not at all likely -> 4 = Very likely",
    x="Promotional Score (low to high)",
    y="Total Venues",
    #fill = "CFP City",
    caption = "Data: CFP")+
  plotTheme
```



### 2.6.1 Cross-tabs - Promotional Focus on Artistic Content by size chart

There are not major differences between size and age categories with regards to community focus.


```{r promo_by_size}
ggplot(data = main_venue_data %>% 
         filter(city == 'Rotterdam',
                is.na(size) == FALSE,
                size != "",
                promotion > 0) %>%
         mutate(promotion = case_when(promotion == 1 ~ "1. Not At All",
                                            promotion == 2 ~ "2. Not too",
                                            promotion == 3 ~ "3. Somewhat",
                                            promotion == 4 ~ "4. Very"),
                size = case_when(size == 1 ~ "1. < 100 m^2",
                                        size == 2 ~ "2. 101-500 m^2",
                                        size == 3 ~ "3. 501-1000 m^2",
                                        size %in% c(4, 5) ~ "4. 1001 m^2+")) %>%
         group_by(size, promotion) %>%
         tally()%>%
         ungroup() %>%
         group_by(size) %>%
  mutate(pct = round(100*(n/sum(n)), digits = 2)))+
        geom_bar(aes(y = n, x = size, fill = promotion), 
                 stat = 'identity', position = "dodge",
                 alpha = 0.6)+
  scale_fill_viridis_d(guide = guide_legend())+
  theme(legend.direction = "horizontal", legend.position = "bottom")+
  labs(
    title = "Likelihood Of Promotion of Artistic Content by Venue Size - Rotterdam, 2024",
    subtitle = "",
    x="",
    y="Percentage of venues in size category",
    fill = "Likelihood of Artistic Promotion",
    caption = "Data: CFP"
  )+
  plotTheme
```


### 2.5.2 Cross-tabs - Community Focus by size table

```{r size_promo_table}
main_venue_data %>% 
         filter(city == 'Rotterdam',
                is.na(size) == FALSE,
                promotion > 0) %>%
         mutate(size = case_when(size == 1 ~ "1. < 100 m^2",
                                        size == 2 ~ "2. 101-500 m^2",
                                        size == 3 ~ "3. 501-1000 m^2",
                                        size %in% c(4, 5) ~ "4. 1001 m^2+")) %>%
         group_by(size) %>%
         summarize(count=n(),
           mean_promotion = round(mean(promotion, na.rm = TRUE),
                                                digits = 2))%>%
         ungroup() %>%
  kable() %>%
  kable_styling()
```



### 2.5.3 Cross-tabs - Promotional Focus by age table

```{r age_promo_table}
main_venue_data %>% 
         filter(city == 'Rotterdam',
                is.na(size) == FALSE,
                promotion > 0) %>%
         mutate(years_operating = as.numeric(years_operating)) %>%
         mutate(years_operating = case_when(years_operating == 1 ~ "1. 0-3",
                                            years_operating == 2 ~ "2. 4-10",
                                            years_operating == 3 ~ "3. 11-20",
                                            years_operating == 4 ~ "4. 20+")) %>%
         filter(is.na(years_operating) == FALSE) %>%
         group_by(years_operating) %>%
         summarize(count=n(),
           mean_promotion = round(mean(promotion, na.rm = TRUE),
                                                digits = 2))%>%
         ungroup() %>%
  kable() %>%
  kable_styling()
```

# 3 Interdisciplinarity Scores


Very notable here - roughly 76% of venues have 2+ program uses. This is drastically higher than other cities.

This trend holds up for all the size categories (didn't make this chart but I looked into it - it's true)

Sources: CFP

```{r interdisciplinarity}
#either cut or perhaps change to a bar chart
main_venue_data %>%
  filter(city == "Rotterdam") %>%
  #mutate(venueType_cinema = as.numeric(ifelse(venueType_cinema == "0", 0, NA))) %>%
  #mutate_at(vars(venueType_disco:venueType_studio), as.numeric) %>%
  mutate(number_of_uses = rowSums(across(venueType_disco:venueType_studio))) %>%
  group_by(number_of_uses) %>%
  tally() %>%
  mutate(percentage = round(100*(n/sum(n)), digits = 2)) %>%
  kable() %>%
  kable_styling()
```

## 3.1 Interdisciplinarity Content

While creative output ratings exhibits a similar trend for both multi-use and single-use spaces, other programming ratings are, on average, lower for single-use venues. This aligns with observed trends in other cities.


```{r interdisciplinarity_programming}
main_venue_data %>% 
    filter(city == "Rotterdam") %>% 
  mutate(number_of_uses = rowSums(across(venueType_disco:venueType_studio))) %>%
  mutate(multi_use = ifelse(number_of_uses > 1, "Multi-Use", "Single-Use")) %>%
    select(multi_use, experimentation, creative_output, 
           community_focus, promotion)%>%
    gather(-multi_use, key = "variable", value = "value") %>%
    filter(value != 0) %>%
    mutate(variable = case_when(variable == "community_focus" ~ "Community Focus",
                                variable == "experimentation" ~ "Experimentation",
                                variable == "creative_output" ~ "Creative Output",
                                variable == "promotion" ~ "Promotion")) %>%
    ggplot()+ 
    geom_histogram(aes(value), position = "dodge", binwidth = 1, alpha = 0.6, fill = CityPalette[6]) + 
    facet_grid(multi_use~variable)+ 
    labs(
        title = "Distribution of Programming Variables",
        subtitle = "",
        caption = "Data: CFP")+
    ylab("Number of venues")+
    xlab("Rating (1-4)")+
    plotTheme

```

```{r interdisciplinarity_programming2}
main_venue_data %>% 
    filter(city %in% c("Tokyo", "Stockholm", "Montreal", "Sydney", "Rotterdam")) %>% 
  mutate(number_of_uses = rowSums(across(venueType_disco:venueType_studio ))) %>%
  mutate(multi_use = ifelse(number_of_uses > 1, "Multi-Use", "Single-Use")) %>%
    select(multi_use, experimentation, creative_output, 
           community_focus, promotion, city)%>%
    gather(-multi_use, -city, key = "variable", value = "value") %>%
    filter(value != 0) %>%
    mutate(variable = case_when(variable == "community_focus" ~ "Community Focus",
                                variable == "experimentation" ~ "Experimentation",
                                variable == "creative_output" ~ "Creative Output",
                                variable == "promotion" ~ "Promotion")) %>%
          group_by(variable, city, multi_use) %>%
  summarize(mean_value = round(mean(value, na.rm = TRUE), digits = 2)) %>%
    ggplot()+ 
    geom_bar(aes(x= variable, y=mean_value, fill = multi_use), stat = "identity", position = "dodge", alpha = 0.6) + 
    facet_wrap(~city)+ 
    labs(
        title = "Distribution of Programming Variables",
        subtitle = "",
        caption = "Data: CFP")+
    ylab("Mean Score")+
    xlab("Programming Variable")+
    plotTheme

```

## 3.2. Multi-Use Space Analysis

What are the most common combinations of uses?

Music Bar is frequently combined with other uses, including restaurant, disco etc.,

```{r space_combos}
main_venue_data %>% 
  filter(city == "Rotterdam") %>% 
  select(matches("venueType")) %>%
    mutate(across(everything(), ~ ifelse(. == 1, cur_column(), ""))) %>% 
    mutate(across(everything(), ~ str_replace(., "venueType_", ""))) %>%
    unite("use_combo", everything(), sep = ",") %>%
  mutate(use_combo = toupper(use_combo)) %>%
  group_by(use_combo) %>%
  tally() %>%
  arrange(-n) %>%
  kable() %>%
  kable_styling()

```

## 3.2.1. Uses by District

The multi-use phenomenon is fairly widespread, and there isn't a clear pattern because some of the districts have so few venues, it's a bit hard to say if there's a rent-driven trend.

```{r district_uses}
d2_aggregates %>%
  filter(is.na(venue_count) == FALSE) %>%
  rowwise() %>%
  mutate(venueType_sum = sum(c_across(starts_with("venueType_")))) %>%
  ungroup() %>%
  mutate(mean_uses = venueType_sum/venue_count) %>%
  ggplot()+
  geom_bar(aes(x = d2_name, y = mean_uses), stat = "identity")+
  labs(
    title = "Mean space uses by district",
    subtitle = "",
    x="District",
    y="Mean Number of Space Uses",
    caption = "Data: CFP,  Centraal Bureau voor de Statistiek")+
  plotTheme
```
```{r uses_and_rent}
d2_aggregates %>%
  filter(is.na(venue_count) == FALSE) %>%
  rowwise() %>%
  mutate(venueType_sum = sum(c_across(starts_with("venueType_")))) %>%
  ungroup() %>%
  mutate(mean_uses = venueType_sum/venue_count) %>%
  ggplot()+
  geom_point(aes(y = mean_uses, x = as.numeric(rent_t2)))+
  geom_label(aes(y = mean_uses, x = as.numeric(rent_t2), label = d2_name))+
    labs(
    title = "Mean space uses by district as a function of WOZ, Rotterdam 2021",
    subtitle = "Average WOZ value is the statistical measure from which rents are derived\nGrey areas represent non-residential districts",
    x="Mean Taxable Home Values (Euros) by Gebieden",
    y="Mean Number of Space Uses",
    caption = "Data: CFP,  Centraal Bureau voor de Statistiek")+
  plotTheme
```

## 3.3 Interdisciplinarity City Comparison

Rotterdam has a very large number of multi-use spaces. On average, spaces in Rotterdam are used for ~2.4 different programming uses.


```{r interdisciplinarity_multi_city}
main_venue_data %>%
  filter(city != "",
         city %in% c("Tokyo", "Stockholm", "Montreal", "Sydney", "Rotterdam")) %>%
  mutate(number_of_uses = rowSums(across(venueType_disco:venueType_studio)))%>%
  group_by(number_of_uses, city) %>%
  tally() %>%
  group_by(city) %>%
  mutate(pct = round(100*(n/sum(n)), digits = 2)) %>%
  ggplot()+
  geom_bar(aes(y = pct, x = number_of_uses, fill = city), 
           stat = "identity", alpha = 0.6) +
  scale_fill_manual(values = c(CityPalette[5] , CityPalette[7], CityPalette[3], CityPalette[6], CityPalette[4]))+
  theme(legend.direction = "horizontal", legend.position = "bottom")+
  facet_wrap(~city)+
  labs(
    title = "Number of programming or types of use in creative spaces",
    subtitle = "Subtitle",
    x="Number of Space Usages",
    y="Percentage of Venues",
    fill = "CFP City",
    caption = "Data: CFP")+
  plotTheme
```
```{r interdisciplinarity_multi_city_table}
main_venue_data %>%
  filter(city != "",
         city %in% c("Tokyo", "Stockholm", "Montreal", "Sydney", "Rotterdam")) %>%
  mutate(number_of_uses = rowSums(across(venueType_disco:venueType_studio)))%>%
  group_by(city) %>%
  summarize(mean_num_uses = mean(number_of_uses),
            median_num_uses = median(number_of_uses)) %>%
  group_by(city) %>%
  kable() %>%
  kable_styling()
```


# 4 Closures

The data on closures that was part of the CFP during and right after COVID is no longer part of the analysis.

Sources: CFP

## 4.1 Closures by Programming

```{r closures_variables, eval=FALSE, include=FALSE}
main_venue_data %>% 
    filter(city == "Montreal") %>%
    select(experimentation, creative_output, 
           community_focus, promotion, status)%>%
    gather(-status, key = "variable", value = "value") %>%
    filter(value != 0) %>%
    mutate(variable = case_when(variable == "community_focus" ~ "Community Focus",
                                variable == "experimentation" ~ "Experimentation",
                                variable == "creative_output" ~ "Creative Output",
                                variable == "promotion" ~ "Promotion")) %>%
    ggplot()+ 
    geom_histogram(aes(value), position = "dodge", binwidth = 1, alpha = 0.6, fill = CityPalette[4]) + 
    facet_grid(status~variable)+ 
    labs(
        title = "Distribution of Programming Variables",
        subtitle = "",
        caption = "Data: CFP")+
    ylab("Number of venues")+
    xlab("Rating (1-4)")+
    plotTheme

```

## 4.2 Closures Map

```{r closures_map, , eval=FALSE, include=FALSE}
ggplot()+
  geom_sf(data = d1_aggregates %>%
            filter(city_en == "Montreal"), fill = 'transparent', 
          color = 'grey')+
  geom_point(data = main_venue_data %>%
            filter(city == "Montreal"),
          aes(x = x, y = y, color = status),
          size = 1, alpha = 0.6)+
  geom_text(data = d1_aggregates %>%
              filter(city_en == "Montreal") %>%
              mutate(lon=map_dbl(geometry, ~st_centroid(.x)[[1]]),
                     lat=map_dbl(geometry, ~st_centroid(.x)[[2]])),
            aes(x = lon, y = lat, label = d1_name_en),
            color = "grey", size = 2)+
  labs(
        title = "Club Closures - Montreal, 2022",
        subtitle = "",
        caption = "Data: CFP")+
  mapTheme

```

# 5 Districts

Sources: CFP, Centraal Bureau voor de Statistiek

## 5.0. Dynamic map of districts

Hover over the shapes to see a pop-up icon with some key information about the districts.

Information appended "t_2" corresponds to 2021 data, and "t_1" to 2016.

```{r dynamic_venues}
d2_aggregates %>%
  mutate(venue_kmsq = venue_count / area_km2) %>%
  select(mean_creative_output, mean_experimentation, mean_community_focus, mean_promotion, d2_id, d2_name,
         venue_count, venue_kmsq, station_count, transit_stations_per_km2, area_km2, pop_per_km2_t2, rent_t2, income_t2, change_rent) %>%
  mapview(., zcol = "venue_count")

```

## 5.1 Number of venues per district map

Venues are heavily concentrated in the Centrum with much much smaller numbers of venues in the immediately outlying areas. The several eastern port districts have little or no population and no venues. No district outside the Centrum has even 10 venues.

These maps will need to be styled in illustrator to deal with labels.


```{r venues_total_map}
ggplot()+
  geom_sf(data = d2_aggregates, fill = 'transparent', 
          color = 'grey')+
  geom_sf(data = d2_aggregates %>%
            filter(is.na(venue_count) == FALSE),
          aes(fill = venue_count),
          color = 'grey', alpha = 0.6)+
  scale_fill_viridis('Venue Count', direction = -1, alpha = 0.8)+
  geom_text(data = d2_aggregates %>%
              filter(venue_count != 0) %>%
              mutate(lon=map_dbl(geometry, ~st_centroid(.x)[[1]]),
                     lat=map_dbl(geometry, ~st_centroid(.x)[[2]])),
            aes(x = lon, y = lat, label = d2_name),
            color = "black", size = 3)+
  mapTheme

```

## 5.2 Number of venues per district chart


```{r venues_total_plot}
d2_aggregates %>%
            filter(venue_count != 0) %>%
  ggplot()+
  geom_bar(aes(x = reorder(toupper(d2_name), venue_count), y = venue_count), 
           stat = "identity", fill = CityPalette[6], alpha = 0.6, size = 4 )+
  labs(
    title = "Venues by District, Rotterdam, 2024",
    subtitle = "NUMBER districts have no reported venues",
    x="",
    y="Total Venues",
    #fill = "CFP City",
    caption = "Data: CFP, Centraal Bureau voor de Statistiek")+
  coord_flip()+
  plotTheme

#ggsave("rotterdam_images/venues_district_bar.pdf", width = 11, height = 8, units = "in")


```

## 5.3 Venue Density by District - Symbology

Venue density is dramatically higher in the Centrum. Density is in venues per square kilometer.

Venues that are outside the City boundary are not included in this mapping. 

```{r venue_density}

temp <- d2_aggregates %>%
  mutate(venue_dens = venue_count / area_km2) %>%
            filter(is.na(venue_count) == FALSE)
  

ggplot()+
  geom_sf(data = d2_aggregates, fill = 'transparent', 
          color = 'grey')+
  geom_sf(data = d2_aggregates %>%
            mutate(venue_dens = venue_count / area_km2) %>%
            filter(is.na(venue_count) == FALSE),
          aes(fill = venue_dens),
          color = 'grey')+
  scale_fill_viridis('Venue Density\n Venues/km^2', direction = -1, 
                     #limits=c(0,32), 
                     #breaks=c(0,32), 
                     alpha = 0.6,
                     #labels=c("Minimum","Maximum"),
                     breaks = c(quantile(temp$venue_dens, probs = seq(0, 1, length.out = 5))),
                     labels = scales::number_format(scale = 1))+
  geom_text(data = d2_aggregates %>%
              filter(venue_count !=0) %>%
              mutate(lon=map_dbl(geometry, ~st_centroid(.x)[[1]]),
                     lat=map_dbl(geometry, ~st_centroid(.x)[[2]])),
            aes(x = lon, y = lat, label = d2_name),
            color = "black", size = 3)+
  mapTheme

#ggsave("rotterdam_images/venues_district_chloropleth.pdf", width = 11, height = 8, units = "in")

```

## 5.4 Venue Density - Heatmap

This heatmap shows the degree to which venues are found in only a very small area of Rotterdam. Venues that are outside the City boundary are not included in this mapping. 

```{r create_fishnet, warning = FALSE, message = FALSE}
# Heat map

# Make a fishnet

fishnet <- st_make_grid(d2_aggregates %>%
                          st_transform(crs = 3035), 
                        cellsize = 500) %>% #size in meters
  st_sf() %>%
  st_transform(crs = 4326)

# If this fails, run the following line of code:
# sf_use_s2(FALSE)

fishnet <- fishnet[d2_aggregates %>%
                    st_transform(crs = 4326),] %>%
  mutate(uniqueID = rownames(.)) %>%
  select(uniqueID) %>%
  mutate(lon=map_dbl(geometry, ~st_centroid(.x)[[1]]),
         lat=map_dbl(geometry, ~st_centroid(.x)[[2]]))

# Join the fishet to the points

fishnet <- st_join(fishnet, 
                main_venue_data %>%
                  filter(city == "Rotterdam",
                         is.na(uid) == FALSE,
                         is.na(x)== FALSE,
                         is.na(y)== FALSE) %>%
                  st_as_sf(coords = c("x", "y"), crs = 4326), 
                join = st_intersects, 
                left = TRUE) %>%
  select(uniqueID, uid) %>%
  group_by(uniqueID) %>% 
  summarise(n_venues = n_distinct(uid, na.rm = TRUE)) %>%
  #mutate(n = ifelse(n == 1, 0, n)) %>%
  #rename(n_venues = n) %>%
  as.data.frame() %>%
  select(-geometry) %>%
  left_join(fishnet, .)
```

```{r fishnet_map, warning = FALSE, message = FALSE}

# Make sure you set the labels here to reflect the actual max density by cell

max(fishnet$n_venues)

ggplot()+
  geom_sf(data = d2_aggregates,
          fill = '#f0f0f0', 
          color = 'white')+
  geom_sf(data = fishnet %>%
            filter(n_venues >0), 
          aes(fill = n_venues),
          color = "transparent",
          alpha = 0.4)+
  #geom_text(data = d1_aggregates %>%
  #            filter(city_en == "Montreal",
  #                   venue_count !=0) %>%
  #            mutate(lon=map_dbl(geometry, ~st_centroid(.x)[[1]]),
  #                   lat=map_dbl(geometry, ~st_centroid(.x)[[2]])),
  #          aes(x=lon, y=lat, label=d1_name), size = 3, alpha = 0.4)+
  scale_fill_viridis('VENUES/\nkm^2', direction = -1,
                     limits=c(1,max(fishnet$n_venues)), breaks=c(1, max(fishnet$n_venues)),
                     labels=c("1",max(fishnet$n_venues)))+
  labs(
    title = "VENUE DENSITY - Rotterdam, 2024",
    subtitle = "",
    caption = "Data: CFP, Centraal Bureau voor de Statistiek")+
  mapTheme

#ggsave("rotterdam_images/venues_district_heatmap.pdf", width = 11, height = 8, units = "in")
```

## 5.5 Venue Density with Experimental Content

The districts adacent to the Centrum - to the north and the south - have higher average experimental content likelihood than the Centrum. This is a pattern consistent with what we have seen in most CFP cities.

```{r districts_experimental}
ggplot()+
  geom_sf(data = d2_aggregates,
          fill = '#f0f0f0', 
          color = 'white')+
  geom_point(data = d2_aggregates %>%
               mutate(lon=map_dbl(geometry, ~st_centroid(.x)[[1]]),
                      lat=map_dbl(geometry, ~st_centroid(.x)[[2]])), 
             aes(x=lon, y=lat, size = venue_count, 
                 color = mean_experimentation), 
             alpha = 0.4) + 
  scale_color_viridis('Mean Experimental\nContent Score', direction = -1)+
  scale_size_area(name="", max_size = 25, guide = 'none') + 
  #guides(size=guide_legend("Total Venues")) +
  geom_text(data = d2_aggregates %>%
              filter(venue_count != 0) %>%
              mutate(lon=map_dbl(geometry, ~st_centroid(.x)[[1]]),
                     lat=map_dbl(geometry, ~st_centroid(.x)[[2]])),
            aes(x=lon, y=lat, label=d2_name), size = 3, alpha = 0.65)+
  labs(
    title = "Creative Footprint Venues, Rotterdam, 2024",
    subtitle = "Icons represent total number of venues per district. Maximum = MAXIMUM",
    caption = "Data: CFP, Centraal Bureau voor de Statistiek")+
  mapTheme
```

## 5.6 Districts and Experimental Content

This (and other charts like it) should be reworked during post production and report styling to have 1-4 be replaced with "Not at all" to "Very" likely as the axis


```{r experimental_plot}
# Top wards for experimental content

ggplot(data = d2_aggregates %>%
         filter(is.na(venue_count) == FALSE) %>%
         as.data.frame() %>%
         mutate(venue_text = str_c(as.character(venue_count), " venues")) %>%
         select(venue_text, venue_count, mean_experimentation, d2_name) %>%
         arrange(-mean_experimentation) %>%
         top_n(10))+
  geom_bar(aes(x = reorder(toupper(d2_name), mean_experimentation), 
               y=mean_experimentation),
           stat = "identity", fill = CityPalette[6], width = 0.3,
           alpha = 0.8)+
  geom_text(aes(label = toupper(venue_text), x = toupper(d2_name), 
                y= mean_experimentation / 2), alpha = 0.6, size = 4 )+
  labs(
    title = "DISTRICTS WITH HIGHEST EXPERIMENTAL CONTENT SCORES",
    #subtitle = "Labels indicate total number of districts in that ward",
    caption = "Data: CFP, Centraal Bureau voor de Statistiek")+
  ylab("MEAN EXPERIMENTAL CONTENT SCORE (SCALE OF 1-4)")+
  xlab("")+
  coord_flip()+
  plotTheme
```

```{r experimental_map_chloropleth}
ggplot()+
  geom_sf(data = d2_aggregates, fill = 'transparent', 
          color = 'grey')+
  geom_sf(data = d2_aggregates %>%
            filter(is.na(venue_count) == FALSE),
          aes(fill = mean_experimentation),
          color = 'grey', alpha = 0.6)+
  scale_fill_viridis('Mean Experimental\nContent Score', direction = -1, alpha = 0.8)+
  geom_text(data = d2_aggregates %>%
              filter(venue_count != 0) %>%
              mutate(lon=map_dbl(geometry, ~st_centroid(.x)[[1]]),
                     lat=map_dbl(geometry, ~st_centroid(.x)[[2]])),
            aes(x = lon, y = lat, label = d2_name),
            color = "black", size = 3)+
  labs(
    title = "Experimental Content Scores By District, Rotterdam, 2024",
    subtitle = "",
    caption = "Data: CFP, Centraal Bureau voor de Statistiek")+
  mapTheme

#ggsave("rotterdam_images/experimental_districts_chloropleth.pdf", width = 11, height = 8, units = "in")


```

## 5.7 Venue Density with Community Focused Content

The average scores in the Centrum are not substantially poorer than elsewhere, but they are lower, on average. When we do the clustering analysis, we see that there is some heterogenaeity in the Centrum.

```{r districts_community}
ggplot()+
  geom_sf(data = d2_aggregates,
          fill = '#f0f0f0', 
          color = 'white')+
  geom_point(data = d2_aggregates %>%
               mutate(lon=map_dbl(geometry, ~st_centroid(.x)[[1]]),
                      lat=map_dbl(geometry, ~st_centroid(.x)[[2]])), 
             aes(x=lon, y=lat, size = venue_count, 
                 color = mean_community_focus), 
             alpha = 0.4) + 
  scale_color_viridis('Mean Community\nContent Score', direction = -1)+
  scale_size_area(name="", max_size = 25, guide = 'none') + 
  #guides(size=guide_legend("Total Venues")) +
  geom_text(data = d2_aggregates %>%
              filter(venue_count != 0) %>%
              mutate(lon=map_dbl(geometry, ~st_centroid(.x)[[1]]),
                     lat=map_dbl(geometry, ~st_centroid(.x)[[2]])),
            aes(x=lon, y=lat, label=d2_name), size = 3, alpha = 0.65)+
  labs(
    title = "Creative Footprint Venues, Rotterdam, 2024",
    subtitle = "Icons represent total number of venues per district. Maximum = 122",
    caption = "Data: CFP, Centraal Bureau voor de Statistiek")+
  mapTheme
```

```{r experimental_map_chloropleth}
ggplot()+
  geom_sf(data = d2_aggregates, fill = 'transparent', 
          color = 'grey')+
  geom_sf(data = d2_aggregates %>%
            filter(is.na(venue_count) == FALSE),
          aes(fill = mean_community_focus),
          color = 'grey', alpha = 0.6)+
  scale_fill_viridis('Mean Community\nContent Score', direction = -1, alpha = 0.8)+
  geom_text(data = d2_aggregates %>%
              filter(venue_count != 0) %>%
              mutate(lon=map_dbl(geometry, ~st_centroid(.x)[[1]]),
                     lat=map_dbl(geometry, ~st_centroid(.x)[[2]])),
            aes(x = lon, y = lat, label = d2_name),
            color = "black", size = 3)+
    labs(
    title = "Community Focus Scores By District, Rotterdam, 2024",
    subtitle = "",
    caption = "Data: CFP, Centraal Bureau voor de Statistiek")+
  mapTheme

#ggsave("rotterdam_images/community_districts_chloropleth.pdf", width = 11, height = 8, units = "in")

```

This should be reworked in a report to have 1-4 be replaced with "Not at all" to "Very" likely as the axis

```{r community_plot}
# Top wards for community content

ggplot(data = d2_aggregates %>%
         filter(is.na(mean_community_focus) == FALSE) %>%
         as.data.frame() %>%
         mutate(venue_text = str_c(as.character(venue_count), " venues")) %>%
         select(venue_text, venue_count, mean_community_focus, d2_name) %>%
         arrange(-mean_community_focus) %>%
         top_n(10))+
  geom_bar(aes(x = reorder(toupper(d2_name), mean_community_focus), 
               y=mean_community_focus),
           stat = "identity", fill = CityPalette[6], width = 0.3,
           alpha = 0.8)+
  geom_text(aes(label = toupper(venue_text), x = toupper(d2_name), 
                y= mean_community_focus / 2), alpha = 0.6, size = 4 )+
  labs(
    title = "Districts with highest community likelihood scores",
    #subtitle = "Labels indicate total number of districts in that ward",
    caption = "Data: CFP, Centraal Bureau voor de Statistiek")+
  ylab("MEAN Community Score (SCALE OF 1-4)")+
  xlab("")+
  coord_flip()+
  plotTheme
```

## 5.8 Venue Density with Creative Content

There is a notably low average score for the likelihood of community-focused content in the city center.


```{r districts_creative}
ggplot()+
  geom_sf(data = d2_aggregates,
          fill = '#f0f0f0', 
          color = 'white')+
  geom_point(data = d2_aggregates %>%
               mutate(lon=map_dbl(geometry, ~st_centroid(.x)[[1]]),
                      lat=map_dbl(geometry, ~st_centroid(.x)[[2]])), 
             aes(x=lon, y=lat, size = venue_count, 
                 color = mean_creative_output), 
             alpha = 0.4) + 
  scale_color_viridis('Mean Creative\nContent Score', direction = -1)+
  scale_size_area(name="", max_size = 25, guide = 'none') + 
  #guides(size=guide_legend("Total Venues")) +
  geom_text(data = d2_aggregates %>%
              filter(venue_count != 0) %>%
              mutate(lon=map_dbl(geometry, ~st_centroid(.x)[[1]]),
                     lat=map_dbl(geometry, ~st_centroid(.x)[[2]])),
            aes(x=lon, y=lat, label=d2_name), size = 3, alpha = 0.65)+
  labs(
    title = "Creative Footprint Venues, Rotterdam, 2024",
    subtitle = "Icons represent total number of venues per district. Maximum = 122",
    caption = "Data: CFP, Centraal Bureau voor de Statistiek")+
  mapTheme
```
```{r creativity_plot}
# Top wards for community content

ggplot(data = d2_aggregates %>%
         filter(is.na(mean_creative_output) == FALSE) %>%
         as.data.frame() %>%
         mutate(venue_text = str_c(as.character(venue_count), " venues")) %>%
         select(venue_text, venue_count, mean_creative_output, d2_name) %>%
         arrange(-mean_creative_output) %>%
         top_n(10))+
  geom_bar(aes(x = reorder(toupper(d2_name), mean_creative_output), 
               y=mean_creative_output),
           stat = "identity", fill = CityPalette[6], width = 0.3,
           alpha = 0.8)+
  geom_text(aes(label = toupper(venue_text), x = toupper(d2_name), 
                y= mean_creative_output / 2), alpha = 0.6, size = 4 )+
  labs(
    title = "Districts with highest creative likelihood scores",
    #subtitle = "Labels indicate total number of districts in that ward",
    caption = "Data: CFP, Centraal Bureau voor de Statistiek")+
  ylab("MEAN Creative Score (SCALE OF 1-4)")+
  xlab("")+
  coord_flip()+
  plotTheme
```


# 6 Urban Variables

Sources: CFP, Centraal Bureau voor de Statistiek

## 6.1 Urban Variable Maps

There are a few key indices one needs to understand with regards to rent and income measurements in Rotterdam. The WOZ statistic is used to measure home values and derive market reents.

### 6.1.1. Rents

Rents are higher in the Centrum and northern districts.

```{r rent_total_map}
ggplot()+
  geom_sf(data = d2_aggregates, fill = 'transparent', 
          color = 'grey')+
  geom_sf(data = d2_aggregates %>%
            filter(is.na(rent_t2) == FALSE),
          aes(fill = 1000*as.numeric(rent_t2)),
          color = 'grey')+
  scale_fill_viridis('Euros', direction = -1, alpha = 0.8)+
  geom_text(data = d2_aggregates %>%
              mutate(lon=map_dbl(geometry, ~st_centroid(.x)[[1]]),
                     lat=map_dbl(geometry, ~st_centroid(.x)[[2]])),
            aes(x = lon, y = lat, label = d2_name),
            color = "black", size = 3)+
labs(
    title = "Mean Taxable Home Values (Euros) by Gebieden, Rotterdam, 2021",
    subtitle = "Average WOZ value is the statistical measure from which rents are derived\nGrey areas represent non-residential districts",
    caption = "Data: Centraal Bureau voor de Statistiek")+
  mapTheme
```

### 6.1.2. Change in Rents

WOZ values are appreciating faster in the northern districts and the Centrum, with some average WOZ rates nearly doubling when adjusted for inflation over just a five year period.

WOZ change based on 2016-2021 figures, adjusted to 2021 rates using the following CPI adjustment:

https://www.global-rates.com/en/calculations/inflation-calculator/#amount

```{r rent_change_map}
ggplot()+
  geom_sf(data = d2_aggregates, fill = 'transparent', 
          color = 'grey')+
  geom_sf(data = d2_aggregates %>%
            filter(is.na(change_rent) == FALSE),
          aes(fill = 100*(as.numeric(change_rent) / (.92*as.numeric(rent_t1)))),
          color = 'grey')+
  scale_fill_viridis('Percentage Change', direction = -1, alpha = 0.8)+
  geom_text(data = d2_aggregates %>%
              mutate(lon=map_dbl(geometry, ~st_centroid(.x)[[1]]),
                     lat=map_dbl(geometry, ~st_centroid(.x)[[2]])),
           aes(x = lon, y = lat, label = d2_name),
            color = "black", size = 3)+
labs(
    title = "Inflation Adjusted Change in Mean WOZ by Gebieden - 2016-2021",
    subtitle = "Mean WOZ change with inflation of 9%. White areas represent non-residential districts",
    caption = "Data: Centraal Bureau voor de Statistiek")+
  mapTheme
```

### 6.1.3. Income

Mean individual yearly income ($AUD/week)

```{r income_total_map}
ggplot()+
  geom_sf(data = d2_aggregates, fill = 'transparent', 
          color = 'grey')+
  geom_sf(data = d2_aggregates %>%
            filter(is.na(income_t2) == FALSE),
          aes(fill = 1000*as.numeric(income_t2)),
          color = 'grey')+
  scale_fill_viridis('Income', direction = -1, alpha = 0.8)+
  geom_text(data = d2_aggregates %>%
              mutate(lon=map_dbl(geometry, ~st_centroid(.x)[[1]]),
                     lat=map_dbl(geometry, ~st_centroid(.x)[[2]])),
           aes(x = lon, y = lat, label = d2_name),
            color = "black", size = 3)+
labs(
    title = "Average Yearly Personal Income by Gebieden, Rotterdam, 2021",
    subtitle = "Euros per year. Grey areas represent non-residential districts",
    caption = "Data: Centraal Bureau voor de Statistiek")+
  mapTheme
```

### 6.1.4. Change in Income

Some of the most critical areas for venues in Rotterdam are experiencing the highest rates of increase in personal income levels.

```{r income_change_map}
ggplot()+
  geom_sf(data = d2_aggregates, fill = 'transparent', 
          color = 'grey')+
  geom_sf(data = d2_aggregates %>%
            filter(is.na(change_income) == FALSE),
          aes(fill = 100*(as.numeric(change_income) / (.92*as.numeric(income_t1)))),
          color = 'grey')+
  scale_fill_viridis('Percentage', direction = -1, alpha = 0.8)+
  geom_text(data = d2_aggregates %>%
              mutate(lon=map_dbl(geometry, ~st_centroid(.x)[[1]]),
                     lat=map_dbl(geometry, ~st_centroid(.x)[[2]])),
           aes(x = lon, y = lat, label = d2_name),
            color = "black", size = 3)+
labs(
    title = "Average Change in Personal Yearly Income by Gebieden, 2016-2021",
    subtitle = "Adjusted for inflation",
    caption = "Data: Centraal Bureau voor de Statistiek")+
  mapTheme
```


## 6.2. Transit Density

Metro transit is concentrated in and around the Centrum. This map does not include streetcars, busses or regional rail transport stops.

Source: Centraal Bureau voor de Statistiek, ESRI ArcGIS Online

```{r transit_density_map}
ggplot()+
  geom_sf(data = d2_aggregates, fill = 'transparent', 
          color = 'grey')+
  geom_sf(data = d2_aggregates %>%
            filter(is.na(transit_stations_per_km2) == FALSE),
          aes(fill = transit_stations_per_km2),
          color = 'grey')+
  scale_fill_viridis('Stations/km^2', direction = -1, alpha = 0.8)+
 geom_text(data = d2_aggregates %>%
              mutate(lon=map_dbl(geometry, ~st_centroid(.x)[[1]]),
                     lat=map_dbl(geometry, ~st_centroid(.x)[[2]])),
           aes(x = lon, y = lat, label = d2_name),
            color = "black", size = 3)+
labs(
    title = "Transit Density - Rotterdam",
    subtitle = "Fixed Rail Stations / km^2 - Metro stations only",
    caption = "Data: ESRI, Centraal Bureau voor de Statistiek")+
  mapTheme
```

## 6.2 Venue density as a function of transit density

General trends across CFP cities show a positive relationship between venue density and fixed transit density. Even in auto-oriented cities Sydney and Montreal, this trend generally holds (First plot). Rotterdam has a strong correlation - as the Centrum has far and away the highest transit density and the highest venue density in the city. (Third plot).

```{r venues_and_transit}
ggplot(d1_aggregates %>%
         as.data.frame() %>%
         filter(city_en %in% c("Tokyo", "Berlin", "Montreal", "Stockholm")) %>%
         filter(! d1_name %in% remove_arrondissements) %>%
         mutate(venue_dens = venue_count / area_km2,
                venue_dens = ifelse(venue_dens == 0, 0, venue_dens),
                city  = case_when(city_en == "Berlin" ~ "1. BERLIN, 2017",
                                  city_en == "Tokyo" ~ "3. TOKYO, 2019",
                                  city_en == "Stockholm" ~ "4. STOCKHOLM, 2021",
                                  city_en == "Montreal" ~ "5. MONTREAL, 2022")) %>%
         select(city, venue_dens, transit_stations_per_km2) %>%
         rbind(., d2_aggregates_all %>%
                 as.data.frame() %>%
         filter(city_en %in% c("Sydney", "New York")) %>%
         mutate(venue_dens = venue_count / area_km2,
                venue_dens = ifelse(venue_dens == 0, 0, venue_dens),
                city  = case_when(city_en == "New York" ~ "2. NEW YORK, 2018",
                                  city_en == "Sydney" ~ "6. SYDNEY, 2023")) %>%
           select(city, venue_dens, transit_stations_per_km2)) %>%
           rbind(., d2_aggregates %>%
                   as.data.frame() %>%
         mutate(venue_dens = venue_count / area_km2,
                venue_dens = ifelse(venue_dens == 0, 0, venue_dens),
                city  = "7. ROTTERDAM, 2024") %>%
         select(city, venue_dens, transit_stations_per_km2))) + 
  geom_point(aes(x = transit_stations_per_km2, y = venue_dens, color = city),
             size = 2, alpha = 0.6)+
  geom_hline(aes(yintercept = median(d1_aggregates$venue_count / d1_aggregates$area_km, na.rm = TRUE)))+
  geom_vline(aes(xintercept = median(d1_aggregates$transit_stations_per_km2, na.rm = TRUE)))+
  scale_color_manual(values = c(CityPalette[1], CityPalette[2], CityPalette[3], CityPalette[4], CityPalette[5], CityPalette[6], "orange"))+
 # scale_x_continuous(breaks = c(0, median(d1_aggregates$transit_stations_per_km2, na.rm = TRUE),
#                                2.5, max(d1_aggregates$transit_stations_per_km2, na.rm = TRUE)), 
#                     labels = c("NONE", "MEDIAN", "HIGH", "MAXIMUM"))+
 # scale_y_continuous(breaks = c(0, median(d1_aggregates$venue_count / d1_aggregates$area_km, na.rm = TRUE),
  #                              5.5, max(d1_aggregates$venue_count / d1_aggregates$area_km, na.rm = TRUE)), 
  #                   labels = c("NONE", "MEDIAN", "HIGH", "MAXIMUM"))+
  geom_smooth(aes(x = transit_stations_per_km2, y = venue_dens),
                 alpha=0.1,
                 weight = 0.5, color = "light grey", linetype="dashed",
                 se = FALSE,
                 method = "lm") +
  labs(
    title = "VENUE DENSITY AND TRANSIT DENSITY GO TOGETHER",
    subtitle = "EACH POINT REPRESENTS NTA (NY), WARD (TOKYO), DISTRICT (SWE), \nARRONDISSEMENT (MON), SA2 (SYDNEY), GEBIEDEN (ROT), OR BEZIRK (BER)\nDOTTED LINE REPRESENTS BEST FIT TREND.",
    color = "CFP CITY",
    caption = "Data: CFP, Centraal Bureau voor de Statistiek, Montreal Open Data, estat.go.jp, US Census Bureau, City of New York, \nGeodaten aus Deutchland, daten.berlin.de, statistikdatabasen.scb.se\nOpen Data Montreal, Statistics Canada, New South Wales Open Data, Australian Bureau of Statistics, Centraal Bureau voor de Statistiek")+
  ylab("VENUE DENSITY")+
  xlab("RAIL DENSITY")+
  plotTheme
```

```{r transit_density_sydneyl}
d2_aggregates %>%
  mutate(has_venues = ifelse(is.na(venue_count) == TRUE, "No Venues", "Has Venues")) %>%
  as.data.frame() %>%
ggplot()+
  geom_histogram(aes(transit_stations_per_km2), 
                 binwidth = .5, alpha = 0.6, fill = CityPalette[6])+
  facet_wrap(~has_venues)+
  labs(
    title = "Fixed Transit Station Density by Gebieden, Rotterdam, 2024",
    subtitle = "Areas with venues don't necessarily have access to transit",
    caption = "Data: Centraal Bureau voor de Statistiek, ArcGIS Online Feature")+
  ylab("n districts")+
  xlab("Fixed Rail Transit Stops per km by Gebieden")+
  plotTheme

d2_aggregates %>%
  mutate(venue_dens = venue_count / area_km2) %>%
  ggplot()+
  geom_point(aes(x = transit_stations_per_km2, y = venue_dens))+
  geom_text(aes(x = transit_stations_per_km2, y = venue_dens, label = d2_name), 
            nudge_x = .1, nudge_y = 0.1, alpha = 0.2, size = 3) +
  labs(
    title = "Gebieden Venue Density by Fixed Transit Station Density by Gebieden, Rotterdam, 2024",
    subtitle = "Areas with venues don't necessarily have access to transit",
    caption = "Data: Centraal Bureau voor de Statistiek, ArcGIS Online Feature")+
  ylab("Venue Density")+
  xlab("Rail Density")+
  plotTheme

```
 
### 6.2.2 Relationships Between Transit and Rents

Feijnoord and Delfshaven have below expected housing values given transit densities. This suggests that they have relative affordability compared to expected.

```{r transit_and_rents, warning= FALSE, message = FALSE}
d2_aggregates %>%
  ggplot()+
  geom_point(aes(x = transit_stations_per_km2, y = 1000*as.numeric(rent_t2)),
             size = 2, alpha = 0.6, fill = CityPalette[6])+
  geom_smooth(aes(x = transit_stations_per_km2, y = 1000*as.numeric(rent_t2)),
              alpha=0.1,
              weight = 0.5, color = "light grey", linetype="dashed",
              se = FALSE,
              method = "lm")+
  geom_text(aes(x = transit_stations_per_km2, y = 1000*as.numeric(rent_t2), label = d2_name),  
            nudge_x = .1, nudge_y = 0.1, alpha = 0.2, size = 3) +
    labs(
    title = "Relationship Between Average Housing Values  (by Gebieden)",
    subtitle = "Each point represents one of the districts the study area, Values in Euros, 2021",
    caption = "Data: ESRI ArcGIS Online Feature, Centraal Bureau voor de Statistiek")+
  ylab("WOZ - Euros)")+
  xlab("Fixed Transit Stations / km2")+
  plotTheme
```

## 6.3 Urban Variables and Venue Density

In this section we present correlations between urban variables and venue density.

The tables of Pearson's R (or Pearson's Rho) are measures of statistical correlation. 1 is a strong positive correlation, -1 is a strong negative correlation, and 0 is no correlation.


```{r venues_and_urban_vars,  warning = FALSE, message = FALSE}
d2_aggregates %>%
  mutate(venue_dens = venue_count / area_km2,
         mean_ped_freq = ((3*ped_freq_3) + (2* ped_freq_2) + (1* ped_freq_1))/venue_count,
         pop_youth_pct_t2 = 100 * pop_youth_pct_t2,
         rent_t2 = as.numeric(rent_t2),
         income_t2 = as.numeric(income_t2)) %>%
  as.data.frame() %>%
  select(venue_dens, transit_stations_per_km2, pop_per_km2_t2, pop_youth_pct_t2, mean_ped_freq, income_t2, rent_t2) %>%
  gather(-venue_dens, key = "variable", value = "value") %>%
  mutate(variable = case_when(variable == "transit_stations_per_km2" ~ "Transit Stations / km2",
                              variable == "pop_per_km2_t2" ~ "Population / km2",
                              variable == "mean_ped_freq" ~ "Mean Pedestrian Frequency (Max - 3)",
                              variable == "pop_youth_pct_t2" ~ "Percentage of Young Adults",
                              variable == "income_t2" ~ "Median Weekly Household Income",
                              variable == "rent_t2" ~ "Median Weekly Rent")) %>%
  ggplot()+
  geom_point(aes(y = venue_dens, x = value), color = CityPalette[6], alpha = 0.6)+
    facet_wrap(~variable, scales = "free")+
  geom_line(stat = "smooth", method='lm', 
            aes(y = venue_dens, x = value), 
            se = FALSE, 
            linetype = "dashed", alpha = 0.5)+
  labs(
    title = "Venue Density as a Function of Urban Variables, Rotterdam, 2024",
    subtitle = "Each point represents one of the districts with venues in the survey",
    caption = "Data: CFP, ArcGIS Online Feature, Centraal Bureau voor de Statistiek")+
  ylab("Venues / km2")+
  xlab("")+
    plotTheme

```

```{r venue_dens_pearsons}
d2_aggregates %>%
    mutate(venue_dens = venue_count / area_km2,
           mean_ped_freq = ((3*ped_freq_3) + (2* ped_freq_2) + (1* ped_freq_1))/venue_count,
           pop_youth_pct_t2 = 100 * pop_youth_pct_t2,
           rent_t2 = as.numeric(rent_t2),
           income_t2 = as.numeric(income_t2)) %>%
    as.data.frame() %>%
    select(venue_dens, transit_stations_per_km2, pop_per_km2_t2, pop_youth_pct_t2, mean_ped_freq, income_t2, rent_t2) %>%
    gather(-venue_dens, key = "variable", value = "value") %>%
    mutate(variable = case_when(variable == "transit_stations_per_km2" ~ "Transit Stations / km2",
                                variable == "pop_per_km2_t2" ~ "Population / km2",
                                variable == "mean_ped_freq" ~ "Mean Pedestrian Frequency (Max - 3)",
                                variable == "pop_youth_pct_t2" ~ "Percentage of Young Adults",
                                variable == "income_t2" ~ "Median Weekly Household Income",
                                variable == "rent_t2" ~ "Median Weekly Rent")) %>% 
  filter(is.na(venue_dens) == FALSE) %>% 
  group_by(variable) %>% 
  summarize(pearsons_r = cor(as.numeric(value), venue_dens, method = "pearson")) %>%
  kable() %>%
  kable_styling()
```

Rotterdam has similar economic geography to other European, mono-centric cities where transit density and incomes density have a positive correlation.

Some data are missing for Berlin and Tokyo.


```{r}
d1_aggregates %>% 
  filter(city %in% c("Montreal", "Stockholm")) %>%
  mutate(transit_stations_per_km2 = ifelse(is.na(transit_stations_per_km2) == TRUE, 0, transit_stations_per_km2)) %>% 
  as.data.frame() %>%
  select(income_t2, transit_stations_per_km2, city) %>%
  rename(city_en = city) %>%
  rbind(.,
        d2_aggregates_all %>% 
  filter(city_en %in% c("Sydney", "New York")) %>%
  mutate(transit_stations_per_km2 = ifelse(is.na(transit_stations_per_km2) == TRUE, 
                                           0, transit_stations_per_km2))%>%
    as.data.frame() %>%
  select(income_t2, transit_stations_per_km2, city_en) %>%
  rename(city_en = city_en)) %>%
   rbind(., d2_aggregates %>%
             mutate(transit_stations_per_km2 = ifelse(is.na(transit_stations_per_km2) == TRUE, 0,
                                                      transit_stations_per_km2)) %>%
                     as.data.frame() %>%
  select(income_t2, transit_stations_per_km2, city_en) %>%
  rename(city_en = city_en) ) %>%
  ggplot()+ 
  geom_point(aes(y = as.numeric(income_t2), x = transit_stations_per_km2),
             alpha = 0.6, color = CityPalette[6]) + 
  geom_line(stat = "smooth", method='lm', 
            aes(y = as.numeric(income_t2), x = transit_stations_per_km2), 
            se = FALSE, 
            linetype = "dashed", alpha = 0.5)+
  facet_wrap(~city_en, scales = "free")+
  labs(
    title = "Area Income as a Function of Transit Density",
    subtitle = "Each point represents a top level administrative district",
    caption = "Data: CFP, ArcGIS Online Feature, Centraal Bureau voor de Statistiek")+
  ylab("Average District Income in Local Currency\nTime Periods Vary")+
  xlab("Fixed Transit Stops per km2 by District")+
  plotTheme

```

## 6.4 Urban variables and venue characteristics

Rotterdam's venues tend to cluster near transit - and so do higher rents and incomes. Meanwhile, program ratings are negatively correlated with rents, incomes, and transit density - there is lower program rating nearer to the center.

### 6.4.1 Urban variables and Experimentation

Experimentation seems to be inversely related to transit density. 


```{r experimentation_and_urban_vars, warning = FALSE, message = FALSE}
d2_aggregates %>%
  mutate(venue_dens = venue_count / area_km2,
         mean_ped_freq = ((3*ped_freq_3) + (2* ped_freq_2) + (1* ped_freq_1))/venue_count,
         pop_youth_pct_t2 = 100 * pop_youth_pct_t2) %>%
  as.data.frame() %>%
  select(mean_experimentation, transit_stations_per_km2, pop_per_km2_t2, pop_youth_pct_t2, mean_ped_freq, income_t2, rent_t2) %>%
  gather(-mean_experimentation, key = "variable", value = "value") %>%
  mutate(variable = case_when(variable == "transit_stations_per_km2" ~ "Transit Stations / km2",
                              variable == "pop_per_km2_t2" ~ "Population / km2",
                              variable == "mean_ped_freq" ~ "Mean Pedestrian Frequency (Max - 3)",
                              variable == "pop_youth_pct_t2" ~ "Percentage of Young Adults",
                              variable == "income_t2" ~ "Median Weekly Household Income",
                              variable == "rent_t2" ~ "Median Weekly Rent")) %>%
  ggplot()+
  geom_point(aes(y = mean_experimentation, x = as.numeric(value)), color = CityPalette[6], alpha = 0.6)+
    facet_wrap(~variable, scales = "free")+
  geom_line(stat = "smooth", method='lm', 
            aes(y = mean_experimentation, x = as.numeric(value)), 
            se = FALSE, 
            linetype = "dashed", alpha = 0.5)+
  labs(
    title = "Mean Experimentation Score as a Function of Urban Variables, Rotterdam, 2024",
    subtitle = "Each point represents an arrondissement with venues in the survey",
    caption = "Data: CFP, ArcGIS Online Feature, Centraal Bureau voor de Statistiek")+
  ylab("Experimentation Score")+
  xlab("")+
    plotTheme

```



```{r experimental_pearsons}

d2_aggregates %>%
  mutate(venue_dens = venue_count / area_km2,
         mean_ped_freq = ((3*ped_freq_3) + (2* ped_freq_2) + (1* ped_freq_1))/venue_count,
         pop_youth_pct_t2 = 100 * pop_youth_pct_t2) %>%
  as.data.frame() %>%
  select(mean_experimentation, transit_stations_per_km2, pop_per_km2_t2, pop_youth_pct_t2, mean_ped_freq, income_t2, rent_t2) %>%
  gather(-mean_experimentation, key = "variable", value = "value") %>%
  mutate(variable = case_when(variable == "transit_stations_per_km2" ~ "Transit Stations / km2",
                              variable == "pop_per_km2_t2" ~ "Population / km2",
                              variable == "mean_ped_freq" ~ "Mean Pedestrian Frequency (Max - 3)",
                              variable == "pop_youth_pct_t2" ~ "Percentage of Young Adults",
                              variable == "income_t2" ~ "Median Weekly Household Income",
                              variable == "rent_t2" ~ "Median Weekly Rent")) %>% 
  filter(is.na(mean_experimentation) == FALSE) %>% 
  group_by(variable) %>% 
  summarize(pearsons_r = cor(as.numeric(value), mean_experimentation, method = "pearson")) %>%
  kable() %>%
  kable_styling()
```

### 6.4.2 Urban variables and Creative Output

Creative output is positively correlated with income, but negatively correlated with pedestrian frequency, population density, and population of young adults. These trends are different than those seen in other CFP cities. 

```{r creative_and_urban_vars, warning = FALSE, message = FALSE}
d2_aggregates %>%
  mutate(venue_dens = venue_count / area_km2,
         mean_ped_freq = ((3*ped_freq_3) + (2* ped_freq_2) + (1* ped_freq_1))/venue_count,
         pop_youth_pct_t2 = 100 * pop_youth_pct_t2) %>%
  as.data.frame() %>%
  select(mean_creative_output, transit_stations_per_km2, pop_per_km2_t2, pop_youth_pct_t2, mean_ped_freq, income_t2, rent_t2) %>%
  gather(-mean_creative_output, key = "variable", value = "value") %>%
  mutate(variable = case_when(variable == "transit_stations_per_km2" ~ "Transit Stations / km2",
                              variable == "pop_per_km2_t2" ~ "Population / km2",
                              variable == "mean_ped_freq" ~ "Mean Pedestrian Frequency (Max - 3)",
                              variable == "pop_youth_pct_t2" ~ "Percentage of Young Adults",
                              variable == "income_t2" ~ "Median Weekly Household Income",
                              variable == "rent_t2" ~ "Median Weekly Rent")) %>%
  ggplot()+
  geom_point(aes(y = mean_creative_output, x = as.numeric(value)), color = CityPalette[6], alpha = 0.6)+
    facet_wrap(~variable, scales = "free")+
  geom_line(stat = "smooth", method='lm', 
            aes(y = mean_creative_output, x = as.numeric(value)), 
            se = FALSE, 
            linetype = "dashed", alpha = 0.5)+
  labs(
    title = "Mean Creative Output Score as a Function of Urban Variables, Rotterdam, 2024",
    subtitle = "Each point represents an arrondissement with venues in the survey",
    caption = "Data: CFP, ArcGIS Online Feature, Centraal Bureau voor de Statistiek")+
  ylab("Creative Output Score")+
  xlab("")+
    plotTheme

```

```{r creative_output_pearsons}
d2_aggregates %>%
  mutate(venue_dens = venue_count / area_km2,
         mean_ped_freq = ((3*ped_freq_3) + (2* ped_freq_2) + (1* ped_freq_1))/venue_count,
         pop_youth_pct_t2 = 100 * pop_youth_pct_t2) %>%
  as.data.frame() %>%
  select(mean_creative_output, transit_stations_per_km2, pop_per_km2_t2, pop_youth_pct_t2, mean_ped_freq, income_t2, rent_t2) %>%
  gather(-mean_creative_output, key = "variable", value = "value") %>%
  mutate(variable = case_when(variable == "transit_stations_per_km2" ~ "Transit Stations / km2",
                              variable == "pop_per_km2_t2" ~ "Population / km2",
                              variable == "mean_ped_freq" ~ "Mean Pedestrian Frequency (Max - 3)",
                              variable == "pop_youth_pct_t2" ~ "Percentage of Young Adults",
                              variable == "income_t2" ~ "Median Weekly Household Income",
                              variable == "rent_t2" ~ "Median Weekly Rent")) %>% 
  filter(is.na(mean_creative_output) == FALSE) %>% 
  group_by(variable) %>% 
  summarize(pearsons_r = cor(as.numeric(value), mean_creative_output, method = "pearson")) %>%
  kable() %>%
  kable_styling()
```

### 6.4.3 Urban variables and Promotion

No specific correlations are seen between promotion scores and urban variables.

```{r creative_and_urban_vars2, warning = FALSE, message = FALSE}
d2_aggregates %>%
  mutate(venue_dens = venue_count / area_km2,
         mean_ped_freq = ((3*ped_freq_3) + (2* ped_freq_2) + (1* ped_freq_1))/venue_count,
         pop_youth_pct_t2 = 100 * pop_youth_pct_t2) %>%
  as.data.frame() %>%
  select(mean_promotion, transit_stations_per_km2, pop_per_km2_t2, pop_youth_pct_t2, mean_ped_freq, income_t2, rent_t2) %>%
  gather(-mean_promotion, key = "variable", value = "value") %>%
  mutate(variable = case_when(variable == "transit_stations_per_km2" ~ "Transit Stations / km2",
                              variable == "pop_per_km2_t2" ~ "Population / km2",
                              variable == "mean_ped_freq" ~ "Mean Pedestrian Frequency (Max - 3)",
                              variable == "pop_youth_pct_t2" ~ "Percentage of Young Adults",
                              variable == "income_t2" ~ "Median Weekly Household Income",
                              variable == "rent_t2" ~ "Median Weekly Rent")) %>%
  ggplot()+
  geom_point(aes(y = mean_promotion, x = as.numeric(value)), color = CityPalette[6], alpha = 0.6)+
    facet_wrap(~variable, scales = "free")+
  geom_line(stat = "smooth", method='lm', 
            aes(y = mean_promotion, x = as.numeric(value)), 
            se = FALSE, 
            linetype = "dashed", alpha = 0.5)+
  labs(
    title = "Mean Promotion Score as a Function of Urban Variables, Rotterdam, 2024",
    subtitle = "Each point represents an arrondissement with venues in the survey",
    caption = "Data: CFP, ArcGIS Online Feature, Centraal Bureau voor de Statistiek")+
  ylab("Mean Promotion Score")+
  xlab("")+
    plotTheme

```

```{r promotion_pearsons}

d2_aggregates %>%
  mutate(venue_dens = venue_count / area_km2,
         mean_ped_freq = ((3*ped_freq_3) + (2* ped_freq_2) + (1* ped_freq_1))/venue_count,
         pop_youth_pct_t2 = 100 * pop_youth_pct_t2) %>%
  as.data.frame() %>%
  select(mean_promotion, transit_stations_per_km2, pop_per_km2_t2, pop_youth_pct_t2, mean_ped_freq, income_t2, rent_t2) %>%
  gather(-mean_promotion, key = "variable", value = "value") %>%
  mutate(variable = case_when(variable == "transit_stations_per_km2" ~ "Transit Stations / km2",
                              variable == "pop_per_km2_t2" ~ "Population / km2",
                              variable == "mean_ped_freq" ~ "Mean Pedestrian Frequency (Max - 3)",
                              variable == "pop_youth_pct_t2" ~ "Percentage of Young Adults",
                              variable == "income_t2" ~ "Median Weekly Household Income",
                              variable == "rent_t2" ~ "Median Weekly Rent")) %>% 
  filter(is.na(mean_promotion) == FALSE) %>% 
  group_by(variable) %>% 
  summarize(pearsons_r = cor(as.numeric(value), mean_promotion, method = "pearson")) %>%
  kable() %>%
  kable_styling()
```

### 6.4.4 Urban variables and Community Focus

Community focus tends to decrease with higher population of young adults, but increase with income. 

```{r community_and_urban_vars, warning = FALSE, message = FALSE}
d2_aggregates %>%
  mutate(venue_dens = venue_count / area_km2,
         mean_ped_freq = ((3*ped_freq_3) + (2* ped_freq_2) + (1* ped_freq_1))/venue_count,
         pop_youth_pct_t2 = 100 * pop_youth_pct_t2) %>%
  as.data.frame() %>%
  select(mean_community_focus, transit_stations_per_km2, pop_per_km2_t2, pop_youth_pct_t2, mean_ped_freq, income_t2, rent_t2) %>%
  gather(-mean_community_focus, key = "variable", value = "value") %>%
  mutate(variable = case_when(variable == "transit_stations_per_km2" ~ "Transit Stations / km2",
                              variable == "pop_per_km2_t2" ~ "Population / km2",
                              variable == "mean_ped_freq" ~ "Mean Pedestrian Frequency (Max - 3)",
                              variable == "pop_youth_pct_t2" ~ "Percentage of Young Adults",
                              variable == "income_t2" ~ "Median Weekly Household Income",
                              variable == "rent_t2" ~ "Median Weekly Rent")) %>%
  ggplot()+
  geom_point(aes(y = mean_community_focus, x = as.numeric(value)), color = CityPalette[6], alpha = 0.6)+
    facet_wrap(~variable, scales = "free")+
  geom_line(stat = "smooth", method='lm', 
            aes(y = mean_community_focus, x = as.numeric(value)), 
            se = FALSE, 
            linetype = "dashed", alpha = 0.5)+
  labs(
    title = "Mean Community Focus Score as a Function of Urban Variables, Rotterdam, 2024",
    subtitle = "Each point represents a district with venues in the survey",
    caption = "Data: CFP, ArcGIS Online Feature, Centraal Bureau voor de Statistiek")+
  ylab("Community Focus Score")+
  xlab("")+
    plotTheme

```

```{r community_pearsons}
d2_aggregates %>%
  mutate(venue_dens = venue_count / area_km2,
         mean_ped_freq = ((3*ped_freq_3) + (2* ped_freq_2) + (1* ped_freq_1))/venue_count,
         pop_youth_pct_t2 = 100 * pop_youth_pct_t2) %>%
  as.data.frame() %>%
  select(mean_community_focus, transit_stations_per_km2, pop_per_km2_t2, pop_youth_pct_t2, mean_ped_freq, income_t2, rent_t2) %>%
  gather(-mean_community_focus, key = "variable", value = "value") %>%
  mutate(variable = case_when(variable == "transit_stations_per_km2" ~ "Transit Stations / km2",
                              variable == "pop_per_km2_t2" ~ "Population / km2",
                              variable == "mean_ped_freq" ~ "Mean Pedestrian Frequency (Max - 3)",
                              variable == "pop_youth_pct_t2" ~ "Percentage of Young Adults",
                              variable == "income_t2" ~ "Median Weekly Household Income",
                              variable == "rent_t2" ~ "Median Weekly Rent")) %>%
filter(is.na(mean_community_focus) == FALSE) %>% 
  group_by(variable) %>% 
  summarize(pearsons_r = cor(as.numeric(value), mean_community_focus, method = "pearson")) %>%
  kable() %>%
  kable_styling()
```

### 6.4.5. All Variables Pearson Table

What is the relationship between the following urban factors and the programming or venue density characteristics of Districts (Gebieden) in Rotterdam?

Over .6 - strong
.2 - .6 - Correlated
Under .2 - No correlation

```{r}
d2_aggregates %>%
    mutate(venue_dens = venue_count / area_km2,
           mean_ped_freq = ((3*ped_freq_3) + (2* ped_freq_2) + (1* ped_freq_1))/venue_count,
           pop_youth_pct_t2 = 100 * pop_youth_pct_t2,
           rent_t2 = as.numeric(rent_t2),
           income_t2 = as.numeric(income_t2)) %>%
    as.data.frame() %>%
    select(venue_dens, transit_stations_per_km2, pop_per_km2_t2, pop_youth_pct_t2, mean_ped_freq, income_t2, rent_t2) %>%
    gather(-venue_dens, key = "variable", value = "value") %>%
    mutate(variable = case_when(variable == "transit_stations_per_km2" ~ "Transit Stations / km2",
                                variable == "pop_per_km2_t2" ~ "Population / km2",
                                variable == "mean_ped_freq" ~ "Mean Pedestrian Frequency (Max - 3)",
                                variable == "pop_youth_pct_t2" ~ "Percentage of Young Adults",
                                variable == "income_t2" ~ "Income",
                                variable == "rent_t2" ~ "Rent")) %>% 
  filter(is.na(venue_dens) == FALSE) %>% 
  group_by(variable) %>% 
  summarize(pearsons_r = cor(as.numeric(value), venue_dens, method = "pearson")) %>%
  mutate(pearsons_r = case_when(pearsons_r >= 0.6 ~ "Positive (Strong)",
                                pearsons_r < 0.6 & pearsons_r >= 0.2 ~ "Positive",
                                pearsons_r < 0.2 & pearsons_r > -0.2 ~ "No Correlation",
                                pearsons_r <= -0.6 ~ "Negative (Strong)",
                                pearsons_r > -0.6 & pearsons_r <= -0.2 ~ "Negative")) %>%
  spread(-pearsons_r, -variable) %>% 
  mutate(Variable = "Venue Density")%>%
  rbind(., d2_aggregates %>%
  mutate(venue_dens = venue_count / area_km2,
         mean_ped_freq = ((3*ped_freq_3) + (2* ped_freq_2) + (1* ped_freq_1))/venue_count,
         pop_youth_pct_t2 = 100 * pop_youth_pct_t2) %>%
  as.data.frame() %>%
  select(mean_experimentation, transit_stations_per_km2, pop_per_km2_t2, pop_youth_pct_t2, mean_ped_freq, income_t2, rent_t2) %>%
  gather(-mean_experimentation, key = "variable", value = "value") %>%
  mutate(variable = case_when(variable == "transit_stations_per_km2" ~ "Transit Stations / km2",
                              variable == "pop_per_km2_t2" ~ "Population / km2",
                              variable == "mean_ped_freq" ~ "Mean Pedestrian Frequency (Max - 3)",
                              variable == "pop_youth_pct_t2" ~ "Percentage of Young Adults",
                              variable == "income_t2" ~ "Income",
                              variable == "rent_t2" ~ "Rent")) %>% 
  filter(is.na(mean_experimentation) == FALSE) %>% 
  group_by(variable) %>% 
  summarize(pearsons_r = cor(as.numeric(value), mean_experimentation, method = "pearson")) %>%
     mutate(pearsons_r = case_when(pearsons_r >= 0.6 ~ "Positive (Strong)",
                                pearsons_r < 0.6 & pearsons_r >= 0.2 ~ "Positive",
                                pearsons_r < 0.2 & pearsons_r > -0.2 ~ "No Correlation",
                                pearsons_r <= -0.6 ~ "Negative (Strong)",
                                pearsons_r > -0.6 & pearsons_r <= -0.2 ~ "Negative")) %>%
  spread(-pearsons_r, -variable) %>% 
  mutate(Variable = "Experimentation Likelihood")) %>%
  rbind(., d2_aggregates %>%
  mutate(venue_dens = venue_count / area_km2,
         mean_ped_freq = ((3*ped_freq_3) + (2* ped_freq_2) + (1* ped_freq_1))/venue_count,
         pop_youth_pct_t2 = 100 * pop_youth_pct_t2) %>%
  as.data.frame() %>%
  select(mean_creative_output, transit_stations_per_km2, pop_per_km2_t2, pop_youth_pct_t2, mean_ped_freq, income_t2, rent_t2) %>%
  gather(-mean_creative_output, key = "variable", value = "value") %>%
  mutate(variable = case_when(variable == "transit_stations_per_km2" ~ "Transit Stations / km2",
                              variable == "pop_per_km2_t2" ~ "Population / km2",
                              variable == "mean_ped_freq" ~ "Mean Pedestrian Frequency (Max - 3)",
                              variable == "pop_youth_pct_t2" ~ "Percentage of Young Adults",
                              variable == "income_t2" ~ "Income",
                              variable == "rent_t2" ~ "Rent")) %>% 
  filter(is.na(mean_creative_output) == FALSE) %>% 
  group_by(variable) %>% 
  summarize(pearsons_r = cor(as.numeric(value), mean_creative_output, method = "pearson")) %>%
    mutate(pearsons_r = case_when(pearsons_r >= 0.6 ~ "Positive (Strong)",
                                pearsons_r < 0.6 & pearsons_r >= 0.2 ~ "Positive",
                                pearsons_r < 0.2 & pearsons_r > -0.2 ~ "No Correlation",
                                pearsons_r <= -0.6 ~ "Negative (Strong)",
                                pearsons_r > -0.6 & pearsons_r <= -0.2 ~ "Negative")) %>%
  spread(-pearsons_r, -variable) %>% 
  mutate(Variable = "Creative Output Likelihood")) %>%
  rbind(., d2_aggregates %>%
  mutate(venue_dens = venue_count / area_km2,
         mean_ped_freq = ((3*ped_freq_3) + (2* ped_freq_2) + (1* ped_freq_1))/venue_count,
         pop_youth_pct_t2 = 100 * pop_youth_pct_t2) %>%
  as.data.frame() %>%
  select(mean_promotion, transit_stations_per_km2, pop_per_km2_t2, pop_youth_pct_t2, mean_ped_freq, income_t2, rent_t2) %>%
  gather(-mean_promotion, key = "variable", value = "value") %>%
  mutate(variable = case_when(variable == "transit_stations_per_km2" ~ "Transit Stations / km2",
                              variable == "pop_per_km2_t2" ~ "Population / km2",
                              variable == "mean_ped_freq" ~ "Mean Pedestrian Frequency (Max - 3)",
                              variable == "pop_youth_pct_t2" ~ "Percentage of Young Adults",
                              variable == "income_t2" ~ "Income",
                              variable == "rent_t2" ~ "Rent")) %>% 
  filter(is.na(mean_promotion) == FALSE) %>% 
  group_by(variable) %>% 
  summarize(pearsons_r = cor(as.numeric(value), mean_promotion, method = "pearson")) %>%
   mutate(pearsons_r = case_when(pearsons_r >= 0.6 ~ "Positive (Strong)",
                                pearsons_r < 0.6 & pearsons_r >= 0.2 ~ "Positive",
                                pearsons_r < 0.2 & pearsons_r > -0.2 ~ "No Correlation",
                                pearsons_r <= -0.6 ~ "Negative (Strong)",
                                pearsons_r > -0.6 & pearsons_r <= -0.2 ~ "Negative")) %>%
  spread(-pearsons_r, -variable) %>% 
  mutate(Variable = "Artistic Promotion Likelihood")) %>%
  rbind(., d2_aggregates %>%
  mutate(venue_dens = venue_count / area_km2,
         mean_ped_freq = ((3*ped_freq_3) + (2* ped_freq_2) + (1* ped_freq_1))/venue_count,
         pop_youth_pct_t2 = 100 * pop_youth_pct_t2) %>%
  as.data.frame() %>%
  select(mean_community_focus, transit_stations_per_km2, pop_per_km2_t2, pop_youth_pct_t2, mean_ped_freq, income_t2, rent_t2) %>%
  gather(-mean_community_focus, key = "variable", value = "value") %>%
  mutate(variable = case_when(variable == "transit_stations_per_km2" ~ "Transit Stations / km2",
                              variable == "pop_per_km2_t2" ~ "Population / km2",
                              variable == "mean_ped_freq" ~ "Mean Pedestrian Frequency (Max - 3)",
                              variable == "pop_youth_pct_t2" ~ "Percentage of Young Adults",
                              variable == "income_t2" ~ "Income",
                              variable == "rent_t2" ~ "Rent")) %>%
filter(is.na(mean_community_focus) == FALSE) %>% 
  group_by(variable) %>% 
  summarize(pearsons_r = cor(as.numeric(value), mean_community_focus, method = "pearson")) %>%
  mutate(pearsons_r = case_when(pearsons_r >= 0.6 ~ "Positive (Strong)",
                                pearsons_r < 0.6 & pearsons_r >= 0.2 ~ "Positive",
                                pearsons_r < 0.2 & pearsons_r > -0.2 ~ "No Correlation",
                                pearsons_r <= -0.6 ~ "Negative (Strong)",
                                pearsons_r > -0.6 & pearsons_r <= -0.2 ~ "Negative")) %>%
  spread(-pearsons_r, -variable) %>% 
  mutate(Variable = "Community Focus Likelihood")) %>%
  kable() %>%
  kable_styling()

```

## 6.5. Multi-city Density Comparison

Rotterdam has a relatively low venue density per area and a roughly average density per person, amongst CFP cities.

Venue density in the Centrum is comparable to some of the highest density venue clusters in the CFP sample - with as many venues per square km as New York's Bushwick or Berlin's Freidrichshain-Kreuzberg - but the size of the cluster is relatively smaller in terms of number of venues.

```{r}
d1_aggregates %>%
  as.data.frame() %>%
  filter(city != "Sydney") %>%
  group_by(city) %>%
  summarize(total_pop = sum(pop_t2),
            total_venues = sum(venue_count, na.rm = TRUE),
            area_sqkm = sum(area_km2)) %>%
  rbind(.,
        d2_aggregates_all %>%
  as.data.frame() %>%
  filter(city %in% c("Sydney", "Rotterdam")) %>%
  group_by(city) %>%
  summarize(total_pop = sum(pop_t2),
            total_venues = sum(venue_count, na.rm = TRUE),
            area_sqkm = sum(area_km2))) %>%
   rbind(.,
        d2_aggregates %>%
  as.data.frame() %>%
  filter(city %in% c("Sydney", "Rotterdam")) %>%
  group_by(city) %>%
  summarize(total_pop = sum(pop_t2),
            total_venues = sum(venue_count, na.rm = TRUE),
            area_sqkm = sum(area_km2))) %>%
  mutate(venues_per_10k = total_venues / (total_pop/10000),
         venue_sqkm = total_venues / area_sqkm) %>% arrange(desc(total_pop)) %>%
  kable(
    col.names = c("City","Population","Number of Venues","Area (sq km)","Number of Venues per 10k People","Venues Density (/sq km)")
  ) %>% 
kable_styling()

  

```

```{r}
d1_aggregates %>%
  as.data.frame() %>%
  filter(city != "Sydney" & 
           city != "New York") %>%
  select(city, d1_name, venue_count, area_km2) %>%
  rbind(.,
        d2_aggregates_all %>%
  as.data.frame() %>%
  filter(city %in% c("Sydney", "New York")) %>%
  select(city, venue_count, d2_name, area_km2) %>%
    rename(d1_name = d2_name)) %>%
  rbind(., d2_aggregates %>%
          as.data.frame() %>%
          select(venue_count, d2_name, area_km2) %>%
          rename(d1_name = d2_name) %>%
          mutate(city = "Rotterdam")) %>%
  mutate(venue_density = venue_count / area_km2) %>%
  arrange(-venue_density) %>%
  kable(
    col.names = c("City","District Name","Venue Count", "Area (km2)", "Venues/km2")
  ) %>% 
kable_styling() %>%
 scroll_box(height = "200px")

  

```

## 6.5.1 - Point Pattern Analysis of clustering and centrality

Source: CFP

Rotterdam has a very high mean (and median) distance between venues and their nearest neighboring venue of any CFP city. This suggests that there is actually some geographic sprawl to the local venues, despite how many in the Centrum appear relatively close. Many of the venues outside the Centrum are relatively isolated.

Average nn distance between a venue and its two nearest neighbors (in meters).

```{r}


venues_pattern <- main_venue_data %>% 
  filter(city == "Rotterdam", is.na(x) == FALSE) %>% 
  st_as_sf(coords = c("x", "y"), crs = 4326) %>%
  st_transform(epsg_rotterdam) %>%
   mutate(venue_nn2 = nn_function(st_coordinates(.), 
                              st_coordinates(.), k = 3)) %>%
  st_transform(4326) %>%
  rbind(.,  main_venue_data %>% 
  filter(city == "Sydney", is.na(x) == FALSE) %>% 
  st_as_sf(coords = c("x", "y"), crs = 4326) %>%
  st_transform(epsg_sydney) %>%
   mutate(venue_nn2 = nn_function(st_coordinates(.), 
                              st_coordinates(.), k = 3)) %>%
    st_transform(4326)) %>%
  rbind(.,  main_venue_data %>% 
  filter(city == "Stockholm", is.na(x) == FALSE) %>% 
  st_as_sf(coords = c("x", "y"), crs = 4326) %>%
  st_transform(epsg_stockholm) %>%
   mutate(venue_nn2 = nn_function(st_coordinates(.), 
                              st_coordinates(.), k = 3)) %>%
    st_transform(4326)) %>%
rbind(.,  main_venue_data %>% 
  filter(city == "Tokyo", is.na(x) == FALSE) %>% 
  st_as_sf(coords = c("x", "y"), crs = 4326) %>%
  st_transform(epsg_tokyo) %>%
   mutate(venue_nn2 = nn_function(st_coordinates(.), 
                              st_coordinates(.), k = 3)) %>%
    st_transform(4326)) %>%
  rbind(.,  main_venue_data %>% 
  filter(city == "Berlin", is.na(x) == FALSE) %>% 
  st_as_sf(coords = c("x", "y"), crs = 4326) %>%
  st_transform(epsg_berlin) %>%
   mutate(venue_nn2 = nn_function(st_coordinates(.), 
                              st_coordinates(.), k = 3)) %>%
    st_transform(4326)) %>%
  rbind(.,  main_venue_data %>% 
  filter(city == "Montreal", is.na(x) == FALSE) %>% 
  st_as_sf(coords = c("x", "y"), crs = 4326) %>%
  st_transform(epsg_montreal) %>%
   mutate(venue_nn2 = nn_function(st_coordinates(.), 
                              st_coordinates(.), k = 3)) %>%
    st_transform(4326)) %>%
  rbind(.,  main_venue_data %>% 
  filter(city == "New York", is.na(x) == FALSE) %>% 
  st_as_sf(coords = c("x", "y"), crs = 4326) %>%
  st_transform(epsg_new_york) %>%
   mutate(venue_nn2 = nn_function(st_coordinates(.), 
                              st_coordinates(.), k = 3) / 3.28) %>%
    st_transform(4326))

venues_pattern %>%
  as.data.frame() %>%
  group_by(city) %>%
  summarize(mean_knn2_m = mean(venue_nn2),
            median_knn2_m = median(venue_nn2)) %>%
  kable() %>%
  kable_styling()

```

On average, venues in Rotterdam are closer to the center of the city (measured here as the centroid of the venue cluster - the average X,Y location point) than they are in any other CFP city.

```{r dist_to_center}

centers <- main_venue_data %>%
  filter(is.na(x) == FALSE) %>%
  group_by(city) %>%
  summarize(mean_x = mean(x),
         mean_y = mean(y))


venues_centroid_dist <- main_venue_data %>% 
  filter(city == "Rotterdam", is.na(x) == FALSE) %>% 
  st_as_sf(coords = c("x", "y"), crs = 4326) %>%
  st_transform(epsg_rotterdam) %>%
   mutate(centroid_dist = st_distance(., centers %>%
                                    filter(city == "Rotterdam") %>%
                                    st_as_sf(coords = c("mean_x", "mean_y"), crs = 4326) %>%
  st_transform(epsg_rotterdam))) %>%
  st_transform(4326) %>%
  rbind(.,  main_venue_data %>% 
  filter(city == "Sydney", is.na(x) == FALSE) %>% 
  st_as_sf(coords = c("x", "y"), crs = 4326) %>%
  st_transform(epsg_sydney) %>%
  mutate(centroid_dist = st_distance(., centers %>%
                                    filter(city == "Sydney") %>%
                                    st_as_sf(coords = c("mean_x", "mean_y"), crs = 4326) %>%
  st_transform(epsg_sydney))) %>%
    st_transform(4326)) %>%
  rbind(.,  main_venue_data %>% 
  filter(city == "Stockholm", is.na(x) == FALSE) %>% 
  st_as_sf(coords = c("x", "y"), crs = 4326) %>%
  st_transform(epsg_stockholm) %>%
   mutate(centroid_dist = st_distance(., centers %>%
                                    filter(city == "Stockholm") %>%
                                    st_as_sf(coords = c("mean_x", "mean_y"), crs = 4326) %>%
  st_transform(epsg_stockholm))) %>%
    st_transform(4326)) %>%
rbind(.,  main_venue_data %>% 
  filter(city == "Tokyo", is.na(x) == FALSE) %>% 
  st_as_sf(coords = c("x", "y"), crs = 4326) %>%
  st_transform(epsg_tokyo) %>%
    mutate(centroid_dist = st_distance(., centers %>%
                                    filter(city == "Tokyo") %>%
                                    st_as_sf(coords = c("mean_x", "mean_y"), crs = 4326) %>%
  st_transform(epsg_tokyo))) %>%
    st_transform(4326)) %>%
  rbind(.,  main_venue_data %>% 
  filter(city == "Berlin", is.na(x) == FALSE) %>% 
  st_as_sf(coords = c("x", "y"), crs = 4326) %>%
  st_transform(epsg_berlin) %>%
   mutate(centroid_dist = st_distance(., centers %>%
                                    filter(city == "Berlin") %>%
                                    st_as_sf(coords = c("mean_x", "mean_y"), crs = 4326) %>%
  st_transform(epsg_berlin))) %>%
    st_transform(4326)) %>%
  rbind(.,  main_venue_data %>% 
  filter(city == "Montreal", is.na(x) == FALSE) %>% 
  st_as_sf(coords = c("x", "y"), crs = 4326) %>%
  st_transform(epsg_montreal) %>%
   mutate(centroid_dist = st_distance(., centers %>%
                                    filter(city == "Montreal") %>%
                                    st_as_sf(coords = c("mean_x", "mean_y"), crs = 4326) %>%
  st_transform(epsg_montreal))) %>%
    st_transform(4326)) %>%
  rbind(.,  main_venue_data %>% 
  filter(city == "New York", is.na(x) == FALSE) %>% 
  st_as_sf(coords = c("x", "y"), crs = 4326) %>%
  st_transform(epsg_new_york) %>%
   mutate(centroid_dist = st_distance(., centers %>%
                                    filter(city == "New York") %>%
                                    st_as_sf(coords = c("mean_x", "mean_y"), crs = 4326) %>%
  st_transform(epsg_new_york)) / 3.28) %>%
    st_transform(4326))

venues_centroid_dist %>%
  as.data.frame() %>%
  group_by(city) %>%
  summarize(mean_centroid_dist = mean(centroid_dist),
            median_centroid_dist = median(centroid_dist)) %>%
  kable() %>%
  kable_styling()

```

# 7 Borough Thematic Mapping

Sources: CFP, ArcGIS Online Feature, Centraal Bureau voor de Statistiek

## 7.1 Urban Characteristics

### 7.1.1 Urban Characteristics - Quantile Ranks

This "heatmap" chart shows the relatively high or low values of urban variables for Rotterdam's districts. 

Noting from section 6 that Rotterdam's most highly rated districts for program variables tend to have relatively lower levels of rent and income, and that venues seek (and benefit from) transit access, it's worth noting that the following districts have relatively favorable urban conditions for venue locations that allow for programming investments:

Feijnoord, Delfshaven, Isselmonde, Hoogvliet


```{r urban_quantile_characteristics}
# Get quartile values for each of the d1 aggregates for various characteristics

d2_aggregates %>%
    mutate(venue_dens = venue_count / area_km2,
           #mean_ped_freq = ((3*ped_freq_3) + (2* ped_freq_2) + (1* ped_freq_1))/venue_count,
           pop_youth_pct_t2 = 100 * pop_youth_pct_t2) %>%
    as.data.frame() %>%
    select(d2_name, transit_stations_per_km2, pop_per_km2_t2, pop_youth_pct_t2, 
           #mean_ped_freq, 
           income_t2, rent_t2, venue_dens) %>%
    gather(-d2_name, key = "variable", value = "value") %>% 
  mutate(value = as.numeric(value)) %>%
  group_by(variable) %>% 
  summarize(quantile = scales::percent(c(0.25, 0.5, 0.75)), 
            quartile = quantile(value, c(0.25, 0.5, 0.75), na.rm = TRUE)) %>% 
  spread(quantile, quartile) %>% # join it back to the original data analysis
  left_join(d2_aggregates %>%
    mutate(venue_dens = venue_count / area_km2,
          # mean_ped_freq = ((3*ped_freq_3) + (2* ped_freq_2) + (1* ped_freq_1))/venue_count,
           pop_youth_pct_t2 = 100 * pop_youth_pct_t2) %>%
    as.data.frame() %>%
    select(d2_name, transit_stations_per_km2, pop_per_km2_t2, pop_youth_pct_t2, 
           income_t2, rent_t2, venue_dens) %>%
    gather(-d2_name, key = "variable", value = "value"), .) %>%
  mutate(value = as.numeric(value)) %>%
  mutate(quantile = case_when(value >= `75%` ~ 4,
                              value <= `25%` ~ 1,
                              value > `25%` & value < `50%` ~ 2,
                              value >= `50%` & value < `75%` ~ 3))%>%
  mutate(variable = case_when(variable == "transit_stations_per_km2" ~ "Transit Density",
                              variable == "pop_per_km2_t2" ~ "Pop Density",
                              variable == "pop_youth_pct_t2" ~ "Pct Young Adults",
                              variable == "income_t2" ~ "Income",
                              variable == "rent_t2" ~ "Rent",
                              variable == "venue_dens" ~ "Venue Density")) %>%
  ggplot()+
  geom_tile(aes(y = d2_name, x = variable, fill = quantile),
            alpha = 0.6)+ #flip coord, order desc
  scale_fill_gradient(low = "white", high = CityPalette[5],
                     limits=c(1,4), breaks=c(1,4),
                     labels=c("Minimum","Maximum"),
                     name = "")+
  coord_flip()+
  labs(
    title = "District Planning & Population Characteristics, Rotterdam, 2024",
     subtitle = "Districts with no venues have their density represented as grey",
     caption = "Data: CFP, ArcGIS Online Feature, Centraal Bureau voor de Statistiek")+
  #ylab("Quartile")+
  #xlab("")+
    plotTheme
  

```

### 7.1.2 Program and Space Charcteristics - Quantile Ranks

Delfshaven has notably high programming ratings, on average.



```{r venue_quantile_characteristics}
# Get quartile values for each of the d1 aggregates for various characteristics

d2_aggregates %>%
    filter(venue_count > 0) %>%
    mutate(venue_dens = venue_count / area_km2,
           med_size = ((4* size_4) + (3*size_3) + (2* size_2) + (1* size_1))/venue_count) %>%
    as.data.frame() %>%
    select(d2_name, mean_experimentation, mean_creative_output, mean_community_focus, venue_dens, med_size, venue_count, mean_promotion) %>%
    gather(-d2_name, key = "variable", value = "value") %>% 
  mutate(value = as.numeric(value)) %>%
  group_by(variable) %>% 
  summarize(quantile = scales::percent(c(0.25, 0.5, 0.75)), 
            quartile = quantile(value, c(0.25, 0.5, 0.75), na.rm = TRUE)) %>% 
  spread(quantile, quartile) %>% # join it back to the original data analysis
  left_join(d2_aggregates %>%
    filter(venue_count > 0) %>%
    mutate(venue_dens = venue_count / area_km2,
           med_size = ((4* size_4) + (3*size_3) + (2* size_2) + (1* size_1))/venue_count) %>%
    as.data.frame() %>%
    select(d2_name, mean_experimentation, mean_creative_output, mean_community_focus, venue_dens, med_size, venue_count, mean_promotion) %>%
    gather(-d2_name, key = "variable", value = "value"), .) %>%
  mutate(value = as.numeric(value)) %>%
  mutate(quantile = case_when(value >= `75%` ~ 4,
                              value < `25%` ~ 1,
                              value >= `25%` & value < `50%` ~ 2,
                              value >= `50%` & value < `75%` ~ 3)) %>%
  mutate(variable = case_when(variable == "mean_experimentation" ~ "Experimental Content",
                              variable == "venue_dens" ~ "Venue Density",
                              variable == "venue_count" ~ "Total Venues",
                              variable == "mean_promotion" ~ "Promotion of\n Artistic Content",
                              variable == "med_size" ~ "Median Venue Size",
                              variable == "mean_creative_output" ~ "Creative Content",
                              variable == "mean_community_focus" ~ "Community Focus")) %>%
  ggplot()+
  geom_tile(aes(y = d2_name, x = variable, fill = quantile),
            alpha = 0.6)+ #flip coord, order desc
  scale_fill_gradient(low = "white", high = CityPalette[5],
                     limits=c(1,4), breaks=c(1,4),
                     labels=c("Minimum","Maximum"),
                     name = "")+
  coord_flip()+
  labs(
    title = "District Venue Characteristics, Rotterdam, 2024",
     subtitle = "",
     caption = "Data: CFP, ArcGIS Online Feature, Centraal Bureau voor de Statistiek")+
  #ylab("Quartile")+
  #xlab("")+
    plotTheme
  

```


# 8 Supervized Classification Algorithms for Programming and Geographic Clusters

Experimental approach using a classifying clustering algorithm to determine geographic "neighborhoods" of nightlife amenities (geo-clusters) and thematic groupings of venues "program clusters". 

The geo-cluster analysis confirms our sense that there are no coherent corridors or tight venue groups outside the centrum - everything is kind of spread out and the algorithm didn't detect much except for "is it in the Centrum?"

The program clusters were far more interesting - and they suggest three distinct types of venues, and we can see how these venue types differ in location.

## 8.1 Geo-clusters

This first test is a "k-means" cluster analysis that is strictly looking for geographic clusters - this analysis functions by [partitioning a cloud of points in multi-dimensional data to find cluster centroids, and assign each point to a cluster by minimizing within cluster variance](https://en.wikipedia.org/wiki/K-means_clustering).

```{r elbow}
set.seed(123)

library(cluster)
library(factoextra)

# function to compute total within-cluster sum of square 
wss <- function(k) {
  kmeans(main_venue_data %>% 
           filter(city == "Rotterdam", 
                  is.na(y) == FALSE) %>% 
           select(x, y), k, nstart = 10 )$tot.withinss
}

# Compute and plot wss for k = 1 to k = 15
k.values <- 1:15

# extract wss for 2-15 clusters
wss_values <- map_dbl(k.values, wss)

# Run "elbow plot" to determine optimal cluster number.
plot(k.values, wss_values,
       type="b", pch = 19, frame = FALSE, 
       xlab="Number of clusters K",
       ylab="Total within-clusters sum of squares")

# Create a data object with cluster numbers
test <- kmeans(main_venue_data %>% 
            filter(city == "Rotterdam" & 
                   is.na(y) == FALSE) %>% 
            select(x, y), centers = 4, nstart = 25)
```

This interactive map shows the location of these clusters:

```{r leaflet_2}
cluster_data1 <- main_venue_data %>% 
    filter(city == "Rotterdam", 
    is.na(y) == FALSE) %>% 
  cbind(test$cluster) %>% 
  rename(cluster = 'test$cluster')

pal <- colorNumeric(c("red", "blue", "green", "orange"), 1:4)

l2 <- leaflet() %>% 
  addProviderTiles(providers$Esri.WorldTopoMap) %>%
  setView(lng = mean(cluster_data1$x, na.rm = TRUE),
          lat = mean(cluster_data1$y, na.rm = TRUE),
          zoom = 11) %>%
  addScaleBar(position = "topleft") %>%
  addCircleMarkers(data= cluster_data1,
                   lng=~x, 
                   lat=~y,
                   radius =~ 1, 
                   fillOpacity =~ 1,
                   color = ~pal(cluster),
                   label=~paste(name, street, " | Cluster: ", cluster))

l2
```

### 8.1.1 Geo cluster programming characteristics

```{r}

main_venue_data %>% 
    filter(city == "Rotterdam", 
    is.na(y) == FALSE) %>% 
           mutate(years_operating = as.numeric(years_operating)) %>% 
  cbind(test$cluster) %>% 
  rename(cluster = 'test$cluster') %>% 
  filter(is.na(years_operating) == FALSE) %>%
  group_by(cluster) %>%
  summarize(mean_size = mean(size),
            mean_promotion = mean(promotion),
            mean_creative_output = mean(creative_output),
            mean_experimentation = mean(experimentation),
            mean_community_focus = mean(community_focus),
            mean_age = mean(years_operating)) %>%
  gather(-cluster, key = "variable", value = "value") %>%
  ggplot()+
  geom_bar(aes(x = variable, y = value, fill = as.factor(cluster)), 
           stat = "identity", position = "dodge")+
   labs(
    title = "Venue Typologies, Rotterdam, 2024",
     subtitle = "k = 4 geographic clusters",
     caption = "Data: CFP")+
  #ylab("Quartile")+
  plotTheme

```

## 8.2 Programming Clusters

There are three programming clusters in the Rotterdam sample. They are characterized as follows:

1. Larger, older venues with relatively low programming rankings. (The smallest cluster)

2. Medium sized venues with above average or high programming rankings. (The largest cluster)

3. Medium sized venues with below average programming rankings. (The second largest cluster)

Almost all of the number 3 cluster are in the Centrum. The Centrum also has many 1's and 2's. Cluster 2 venues make up the majority of those outside the Centrum.


```{r elbow_2}
set.seed(123)

library(cluster)
library(factoextra)

# function to compute total within-cluster sum of square 
wss2 <- function(k) {
  kmeans(main_venue_data %>% 
           filter(city == "Rotterdam", 
                  is.na(size) == FALSE,
                  is.na(promotion) == FALSE,
                  is.na(creative_output) == FALSE,
                  is.na(experimentation) == FALSE,
                  is.na(community_focus) == FALSE,
                  years_operating %in% c("1.0", "2.0", "3.0", "4.0")) %>% 
           mutate(years_operating = as.numeric(years_operating)) %>%
           select(size, promotion, creative_output, experimentation, community_focus, years_operating), k, nstart = 10 )$tot.withinss
}

# Compute and plot wss for k = 1 to k = 15
k.values2 <- 1:15

# extract wss for 2-15 clusters
wss_values2 <- map_dbl(k.values2, wss2)

# Run "elbow plot" to determine optimal cluster number.
plot(k.values2, wss_values2,
       type="b", pch = 19, frame = FALSE, 
       xlab="Number of clusters K",
       ylab="Total within-clusters sum of squares")

# Create a data object with cluster numbers
test2 <- kmeans(main_venue_data %>% 
           filter(city == "Rotterdam", 
                  is.na(size) == FALSE,
                  is.na(promotion) == FALSE,
                  is.na(creative_output) == FALSE,
                  is.na(experimentation) == FALSE,
                  is.na(community_focus) == FALSE,
                  years_operating %in% c("1.0", "2.0", "3.0", "4.0")) %>% 
           mutate(years_operating = as.numeric(years_operating)) %>%
           select(size, promotion, creative_output, experimentation, community_focus, years_operating), centers = 3, nstart = 25)

main_venue_data %>% 
    filter(city == "Rotterdam", 
                  is.na(size) == FALSE,
                  is.na(promotion) == FALSE,
                  is.na(creative_output) == FALSE,
                  is.na(experimentation) == FALSE,
                  is.na(community_focus) == FALSE ,
                  years_operating %in% c("1.0", "2.0", "3.0", "4.0")) %>% 
           mutate(years_operating = as.numeric(years_operating)) %>% 
  cbind(test2$cluster) %>% 
  rename(cluster = 'test2$cluster') %>% 
  group_by(cluster) %>%
  summarize(med_size = median(size),
            med_promotion = median(promotion),
            med_creative_output = median(creative_output),
            med_experimentation = median(experimentation),
            med_community_focus = median(community_focus),
            med_age = median(years_operating)) %>%
  gather(-cluster, key = "variable", value = "value") %>%
  ggplot()+
  geom_bar(aes(x = variable, y = value), stat = "identity")+
  facet_wrap(~cluster)+
   labs(
    title = "Venue Typologies, Rotterdam, 2024",
     subtitle = "k = 4 clusters based on normalized programming metrics",
     caption = "Data: CFP")+
  #ylab("Quartile")+
  plotTheme

main_venue_data %>% 
    filter(city == "Rotterdam", 
                  is.na(size) == FALSE,
                  is.na(promotion) == FALSE,
                  is.na(creative_output) == FALSE,
                  is.na(experimentation) == FALSE,
                  is.na(community_focus) == FALSE, 
                  years_operating %in% c("1.0", "2.0", "3.0", "4.0")) %>% 
           mutate(years_operating = as.numeric(years_operating)) %>% 
  cbind(test2$cluster) %>% 
  rename(cluster = 'test2$cluster') %>% 
  group_by(cluster) %>%
  tally() %>%
  ggplot()+
  geom_bar(aes(x = cluster, y = n), stat = "identity")+
    labs(
    title = "Total Venues per Typology, Rotterdam, 2024",
     subtitle = "k = 3 clusters based on normalized programming metrics",
     caption = "Data: CFP")+
  plotTheme
```

```{r leaflet_3}
cluster_data2 <- main_venue_data %>% 
    filter(city == "Rotterdam", 
                  is.na(size) == FALSE,
                  is.na(promotion) == FALSE,
                  is.na(creative_output) == FALSE,
                  is.na(experimentation) == FALSE,
                  is.na(community_focus) == FALSE,
                  years_operating %in% c("1.0", "2.0", "3.0", "4.0")) %>% 
           mutate(years_operating = as.numeric(years_operating)) %>% 
  cbind(test2$cluster) %>% 
  rename(cluster = 'test2$cluster')

pal <- colorNumeric(c("red", "blue", "orange"), 1:3)

l2 <- leaflet() %>% 
  addProviderTiles(providers$Esri.WorldTopoMap) %>%
  setView(lng = mean(cluster_data2$x, na.rm = TRUE),
          lat = mean(cluster_data2$y, na.rm = TRUE),
          zoom = 11) %>%
  addScaleBar(position = "topleft") %>%
  addCircleMarkers(data= cluster_data2,
                   lng=~x, 
                   lat=~y,
                   radius =~ 1, 
                   fillOpacity =~ 1,
                   color = ~pal(cluster),
                   label=~paste(name, street, " | Cluster: ", cluster))

l2
```

# 9. Key district profiles

Sources: CFP, ArcGIS Online Feature, Centraal Bureau voor de Statistiek


```{r}

profiles <- d2_aggregates %>%
  mutate(pop_t2 = as.numeric(pop_t2),
         pop_t1 = as.numeric(pop_t1),
         pop_youth_t1 = as.numeric(pop_youth_t1),
         pop_youth_t2 = as.numeric(pop_youth_t2),
         rent_t1 = as.numeric(rent_t1),
         rent_t2 = as.numeric(rent_t2),
         income_t1 = as.numeric(income_t1),
         income_t2 = as.numeric(income_t2)) %>%
  mutate(pop_pct_change = (pop_t2 - pop_t1)/pop_t1 *100, pop_youth_pct_change = (pop_youth_t2 - pop_youth_t1) / pop_youth_t1 *100, 
         pct_change_rent = (rent_t2 - rent_t1) / rent_t1 * 100, 
         pct_change_income = (income_t2 - income_t1) / income_t1 *100, venue_per_km2 = venue_count / area_km2, 
         med_size = ((4* size_4) + (3*size_3) + (2* size_2) + (1* size_1))/venue_count) %>%
  select(d2_name, pop_t1, pop_t2, pop_pct_change, pop_per_km2_t1, pop_per_km2_t2, pop_youth_t1, pop_youth_pct_t1, pop_youth_t2, pop_youth_pct_t2, pop_youth_pct_change, pop_youth_per_km2_t1, pop_youth_per_km2_t2, pop_per_venue_t1, pop_youth_per_venue_t1, pop_per_venue_t2, pop_youth_per_venue_t2, rent_t1, rent_t2, change_rent, pct_change_rent, income_t1, income_t2, change_income, pct_change_income, station_count, transit_stations_per_km2, venue_count, venue_per_km2, med_size, venue_count, mean_promotion, mean_experimentation, mean_creative_output, mean_community_focus) %>%
  st_drop_geometry()

write_csv(profiles, "~/GitHub/CFP/unified__city_data/rotterdam/district_profiles/profiles_table.csv")



```

## 9.1. Rotterdam Centrum

44 venues

Rotterdam Centrum is the vibrant heart of the city, hosting key governmental buildings, major cultural venues, and notable commercial areas. Highlights include the iconic Erasmus Bridge, the modern architecture of the Markthal, and cultural hotspots like the Museum Boijmans Van Beuningen. It boasts the highest public transport connectivity in Rotterdam, making it the most accessible district. This area has a significant concentration of younger residents, about 50% the population is between ages 15-44. However, it features some of the highest housing costs in the city. In 2021, real estate values (319 woz index) in this area exceeded the average of other districts by approximately 26%. 

Rotterdam Centrum boasts the highest density of venues, with a range of programming characteristics. The Centrum has the majority of the venues in the CFP sample, including most of those from the thematic group of venues identified as having the lowest programming ratings. The district's centrality, accessibility, and transit density make it a desirable place for venues but costs are a significant restriction.

## 9.2. Feijenoord

6 venues

Situated to the south of Rotterdam Centrum, Feijenoord is known for its diverse community and the famous football stadium, De Kuip. The district is undergoing significant urban development along it's long waterfront areas. It includes areas like Kop van Zuid, an upscale neighborhood known for its modern skyscrapers and cultural institutions such as the Luxor Theater. Feijenoord has a relatively high youth population, approximately 45%, and its rent (217 WOZ index) is slightly above the average by 5%. Feijenoord has slightly below mean average personal income rates, but rising investment in infrastructure and public spaces. The district is identified in several planning documents as being an area of focus for both redevelopment and the preservation of affordability and cultural space.

Of the districts outside the Centrum, Feijenoord has a relatively high number of venues. Its venues were rated highly for their content and program. These venues are concentrated in waterfront areas, which appear to have been industrial redevelopmnent zones with large footprints - the kinds of spaces where we see nightlife development in many cities.

Feijnoord is identified in the Rotterdam Coalition Agreement 2022-26 as a key area for urban development, with plans to increase the availability of affordable housing and improve living conditions. There is also mention of a need to improve public safety. The NPRZ Execution Plan notes the "Culture & Campus" in Feijnoord as a potential site of future nighttime activity.

## 9.3. Ijsselmonde

2 venues

This southeastern borough of Rotterdam is primarily residential with numerous parks and recreational areas, making it popular among families. Ijsselmonde is thought of as relatively suburban by Rotterdam standards. The district features lower population density and a strong community feel with relatively affordable. Its economic indicators show a middle-range median household income (295,000 euro) and lower rent levels(188 woz index). It is noteworthy that although Ijsselmonde has fewer venues, it boasts spaces rated as being relatively distinctive and experimental by CFP community experts.

## 9.4. Delfshaven

5 venues

Delfshaven combines historic charm with a multicultural atmosphere. It encompasses the historic Pilgrim Fathers Church and the picturesque old harbor area, which attract both tourists and locals. This district is known for its artistic communities, craft breweries, and vibrant street art. Delfshaven has a lower transit density compared to central areas but maintains a unique cultural and historical significance. It features a relatively low median household income(30,000 Euros), about 7.3% lower than the mean. However, we witnessed the highest income growth rate(23.5%) from 2016 to 2021 comparing to other districts. Although it is an old town area, it has a high proportion of young people (about 50%). Additionally, the venues in Delfshaven are more experimental and innovative. While the rent (206 ROZ index) is only 7% higher than the average, Delfshaven has the highest rent increase among all districts. Various indicators suggest the potential for gentrification in Delfshaven.

The Rotterdam Coalition Agreement 2022-2026 mentions Delfshaven in the context of gentrification and affordability, focusing on the need to balance urban development with the needs of existing residents. The Cultural Policy Principles 2025-29 highlights the need for financial support to artists and cultural organizations in neighborhoods at risk of gentrification, such as Delfshaven. This includes providing affordable workspaces and funding for cultural projects that engage the local community and reflect its diversity.



# Appendix - Methods and Sources

## Methodology

This section describes the analysis methods used throughout the study.

### Districts

Cities have various levels of administrative and cultural districts, from the block to the entire municipal boundary, which impact people's urban experience and define jurisdictions and decision making powers. Three district levels that are based on statistical census areas as well as legislative areas are used in the analysis:

1. The Groot-Rijnmond form the broadest level of aggregation to align analysis with decision making bodies. 

2. 19 Wijken based on Census Statistical Areas are used to generate insights at the neighborhood scale, which also corresponds to nationally recognized census boundaries. These correspond to the Gebieden that represent Rotterdam's core "district"-scale unit that is used for the main CFP neighborhood analysis.

3. 97 Buurt are the smallest spatial unit of analysis.

### Census

Demographic data were obtained for two time periods (t1, t2) from the Centraal Bureau voor de Statistiek website. The variables used include:

  1. a_inw: Number of inhabitants (2016, 2021)
  2. a_15_24 & a_25_34: Population by age (2016, 2021)
  3. g_ink_po: Average income per income recipient (x 1000 euro) (2016, 2021) 
  4. g_wozbag: Average WOZ value of homes (x 1,000 euros) (2016, 2021)
  
Population of young adults (youth) has been defined as population between the ages of 15-44 and acquired by summing multiple age ranges. This is notably different from other CFP cities, where there are smaller ranges of age in the national Census (e.g. 18-34 in the US).

Demographic data is joined to the boundary data and then aggregated to the Buurt level, and again to the Wijken level, by summing populations and averaging median income and rent values.

### Transportation

Public transit networks provide insights into the varying levels of accessibility that exist within cities. The Rotterdam Metro (Rotterdamse metro) connects suburban areas of the city to the urban core. 14 metro stops are within the study area.

### Venues

Venue data is collected through CFP research and local workshops. 71 venues have been identified and ranked by community members according to a variety of metrics that assess venue features (type, age, social media presence), spatial characteristics (address, location, accessibility, size), and programming (number of events, number of uses, experimentation, creative output). 

### Data aggregation

Final data aggregation combines districts, census, transportation and venue data into a single data set, which contains the unique demographic, transportation and venue information for each borough. Additional variables are calculated to assess trends like venue density and relationships between venues, demographics and transit.


## Sources

1. All Rotterdam venue data, which includes the selected 71 venues and their corresponding geographic information, characteristics and rankings, were obtained through CFP research and local workshops throughout 2023 and 2024.


2. Geographic district boundaries (Groot-Rijnmond kaart, Wijken, Buurt) were obtained from PDOK open datasets. 

https://service.pdok.nl/cbs/wijkenbuurten/2021/atom/index.xml

3. Transportation data, which includes 2024 train station entrance locations, were obtained from ArcGIS Online Featured layer by kennisloodsSO_rotterdam. The data was released on 04/20/2023 and modified on 02/01/2024.

These data were cross-referenced against maps and other open sources from ret.nl to confirm accuracy of the number and location of stations.

  https://www.arcgis.com/home/item.html?id=6ab32e4545a34b8eaccbe478e88e340a#overview


4. Demographic data were obtained from the Centraal Bureau voor de Statistiek website for years 2016 and 2021

  https://www.cbs.nl/nl-nl/reeksen/publicatie/kerncijfers-wijken-en-buurten

References to planning initiatives in Rotterdam relate to the following documents:

Municipality of Rotterdam. (2022). Coalition Agreement 2022-2026: One City. Rotterdam: Municipality of Rotterdam.

Municipality of Rotterdam. (2023). National Program Rotterdam South (NPRZ) Execution Plan 2023-2027. Rotterdam: Municipality of Rotterdam.

Municipality of Rotterdam. (2025). Principles for Rotterdam's Cultural Policy 2025-2028. Rotterdam: Municipality of Rotterdam.